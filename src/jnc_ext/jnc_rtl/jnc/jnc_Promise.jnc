//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

namespace jnc {

///+++

//..............................................................................

///; static char promiseTypeSrc [] =

opaque class Promise
{
protected:
	size_t m_state;
	Scheduler* m_scheduler;
	Promise* m_pendingPromise;
	variant m_result;
	std.Error const* m_error;
	void thin* m_gcShadowStackFrame;

public:
	construct();
	destruct();

	intptr errorcode wait(function* handler());
	intptr errorcode wait(function* handler(std.Error const* error));

	intptr errorcode wait(function* handler(
		variant result,
		std.Error const* error
		));

	bool errorcode cancelWait(intptr handle);

	variant blockingWait();
	variant async asyncWait();
}

///;

// . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

///; static char promisifierTypeSrc [] =

class Promisifier: Promise
{
	// pass those as completion routines

	void complete();
	void complete(std.Error const* error);

	void complete(
		variant result,
		std.Error const* error
		);
}

///;

//..............................................................................

///---

} // namespace jnc
