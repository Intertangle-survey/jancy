import "io_base.jncx"
import "io_Socket.jnc"
import "io_SocketAddress.jnc"

onSocketEvent (io.SocketEventParams const* params)
{
	switch (params.m_eventCode)
	{
	case io.SocketEventCode.ConnectCompleted:
		printf ("ConnectCompleted\n");
		break;
	
	case io.SocketEventCode.ConnectCancelled:
		printf ("ConnectCancelled\n");
		break;

	case io.SocketEventCode.ConnectError:
		printf ("ConnectError\n");
		break;

	case io.SocketEventCode.Disconnected:
		printf ("Disconnected\n");
		break;

	default:
		printf ("onSocketEvent code: %d\n", params.m_eventCode);
	}

	sys.sleep (100);
}

int main ()
{
	printf ("main ()\n");

	io.SocketAddress address;
	address.parse ("127.0.0.1:12345");

	for (int i = 0; i < 50; i++)
	{
		io.Socket socket;
		socket.m_onSocketEvent += onSocketEvent;
		bool result = 
			try socket.open (io.Protocol.Tcp, io.SocketOpenFlags.Asynchronous) &&
			try socket.connect (address);

		printf ("trying to connect...%d\n", result);
	}

	return -1000;
}