//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

class C1
{
	enum Def
	{
		X = 10,
		Y = 20
	}

	int m_member = 500;

	foo (
		int x = Def.X, 
		int y = bar ()
		)
	{
		printf ("C1.foo (%d, %d)\n", x, y);
	}

	int bar ()
	{
		return m_member;
	}
}

class C2
{
	int m_classValue;
	event m_classOnChanged ();

	property m_prop
	{
		alias int autoget m_value = m_classValue;
		alias bindable event m_onChanged () = m_classOnChanged;

		set (int x)
		{
			m_value = x;
			m_onChanged ();
		}
	}
}

foo ()
{
	printf ("foo ()\n");
}

int main ()
{
	C1 c1;
	c1.foo (1);

	C2 c2;
	c2.m_classOnChanged += foo;
	c2.m_prop = 555;

	printf ("m_classValue = %d\n", c2.m_classValue);

	return 0;
}
 
//.............................................................................
