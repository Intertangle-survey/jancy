//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

/*!

\enum io.NetworkAdapterType

	\import io_base.jncx
	\import io_NetworkAdapter.jnc

	\brief This enumeration specifies available types of the network adapter.

	When enumerating available network adapter you first call `io.createNetworkAdapterDescList`, then iterate through the resulting list of `io.NetworkAdapterDesc` structures, each contains its type information `io.NetworkAdapterDesc.m_type` field.

	\enumvalue Unknown

		Denotes uninitialized value (or undetected type of the network adapter)

	\enumvalue Loopback

		Software loopback network interface.

	\enumvalue Ethernet

		Ethernet network interface.

	\enumvalue Wireless

		``IEEE 802.11`` wireless network interface.

	\enumvalue Ppp

		``PPP`` (point-to-point) network interface.

	\enumvalue TokenRing

		Token ring network interface.

	\enumvalue Slip

		``SLIP`` (serial-line-internet-protocol) network interface.

	\enumvalue Tunnel

		Tunnel type encapsulation network interface.

	\enumvalue _Count

		Not really a type of interface; rather, this is a convenience constant denoting the total count  of adapter types. Should you need a table indexed by adapter type, you could write something like::

			char const* getNetworkAdapterTypeString (io.NetworkAdapterType type)
			{
				static char const stringTable [io.NetworkAdapterType._Count] =
				{
					"<unknown>",
					"loopback",
					// ...
				}

				return stringTable [type];
			}

*/
