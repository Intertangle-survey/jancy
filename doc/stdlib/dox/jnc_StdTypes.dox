// don't use typedefs here!

namespace jnci {

///+++

//.............................................................................

///; static char fmtLiteralTypeSrc [] = 

struct FmtLiteral
{
	char const* m_p;
	unsigned intptr m_length;
	unsigned intptr m_maxLength;
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

///; static char reactorBindSiteTypeSrc [] = 

struct ReactorBindSite
{
	event* m_event ();
	intptr m_cookie;
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

///; static char int64Int64TypeSrc [] = 

struct Int64Int64
{
	long m_a;
	long m_b;
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

///; static char fp64Fp64TypeSrc [] = 

struct Fp64Fp64
{
	double m_a;
	double m_b;
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

///; static char int64Fp64TypeSrc [] = 

struct Int64Fp64
{
	long m_a;
	double m_b;
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

///; static char fp64Int64TypeSrc [] = 

struct Fp64Int64
{
	double m_a;
	long m_b;
}

///;

//.............................................................................

///---

} // namespace jnci {

