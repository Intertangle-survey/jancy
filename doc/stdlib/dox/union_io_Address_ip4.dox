//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

/*!

\union io.Address_ip4

	\import io_base.jncx
	\import io_SocketAddress.jnc

	\brief This union holds information about ``IP4`` address

	On the binary level this union directly maps to ``in_addr``.

	\sa `io.SocketAddress_ip4`

	\field m_i32

		Holds 32-bit representation of ``IP4`` address. There is no need to change the byte order of the address before assignment -- this field is already declared as ``bigendian`` so all the necessary conversions will happen automatically.

	\field m_i8

		Holds four 8-bit bytes of ``IP4`` address.

	\fn parse

		Constructs the address from a string representation in ``string`` argument.

		Returns ``true`` if address string was parsed successfully. Otherwise, sets the description of parsing error and returns ``false`` [#f1]_.

	\fn getString

		Creates and returns a string representation of the address.

	\footnote f1

		|footnote-errorcode|

*/
