//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

/*!

\struct io.SocketAddress_ip6

	\import io_base.jncx
	\import io_SocketAddress.jnc

	\brief This struct holds information about ``IP6`` address in the form suitable for socket communications.

	On the binary level this structure directly maps to ``sockaddr_in6``.

	\sa `io.Socket`, `io.SocketAddressResolver`

	\field m_family

		Holds the address family of the socket address; should be set to `io.AddressFamily.Ip6`.

	\field m_port

		Holds the number of ``TCP`` or ``UDP`` port. There is no need to change the byte order of the port before assignment -- this field is already declared as ``bigendian`` so all the necessary conversions will happen automatically.

	\field m_flow

		Holds ``IP6`` flow information.

	\field m_address

		Holds ``IP6`` address as `io.Address_ip6`.

	\field m_scope

		Holds 32-bit ``IP6`` scope identifier.

	\fn isEqual

		Checks two ``IP6`` socket addresses for *equality*; returns ``true`` if addresses are equal and ``false`` otherwise.

	\fn isMatch

		Checks two ``IP6`` socket addresses for *matching*. The term *matching* requires some explanation.

		Matching could be described as a non-strict equality check. We may decide to only check *port* for equality and ignore the address. To do so, set ``m_address`` field of ``filter`` argument to ``0``.

		Or the other way around -- only check *address* and ignore port -- set ``m_port`` field of ``filter`` argument to ``0``.

		Returns ``true`` if addresses *match* and ``false`` otherwise.

	\fn parse

		Constructs the address from a string representation in ``string`` argument.

		Returns ``true`` if address string was parsed successfully. Otherwise, sets the description of parsing error and returns ``false`` [#f1]_.

	\fn getString

		Creates and returns a string representation of the address.

	\footnote f1

		|footnote-errorcode|

*/
