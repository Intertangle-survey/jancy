//..............................................................................
//
//  This file is part of the Jancy toolkit.
//
//  Jancy is distributed under the MIT license.
//  For details see accompanying license.txt file,
//  the public copy of which is also available at:
//  http://tibbo.com/downloads/archive/jancy/license.txt
//
//..............................................................................

/*!

\class io.Serial

	\brief Brief description for class ``io.Serial``

	Detailed description for class ``io.Serial``

	\field m_isOpen

		Holds the open status for the serial port, i.e. ``true`` if opened; ``false`` otherwise.

	\field m_syncId

		Holds the synchronization ID for the serial port [#f3]_.

	\property m_baudRate

		Detailed description for property ``m_baudRate``

	\property m_flowControl

		Detailed description for property ``m_flowControl``

	\property m_dataBits

		Detailed description for property ``m_dataBits``

	\property m_stopBits

		Detailed description for property ``m_stopBits``

	\property m_parity

		Detailed description for property ``m_parity``

	\property m_statusLines

		Detailed description for property ``m_statusLines``

	\property m_dtr

		Detailed description for property ``m_dtr``

	\property m_rts

		Detailed description for property ``m_rts``

	\event m_onSerialEvent

		Detailed description for event ``m_onSerialEvent``

	\fn open

		Detailed description for function ``open``

	\fn close

		Detailed description for function ``close``

		Sometimes it may be convenient to use *disposable* pattern to ensure timely invokation of ``close`` [#f2]_.

	\fn read

		Detailed description for function ``read``

	\fn write

		Detailed description for function ``write``

	\alias dispose
		Effectively makes ``io.Serial`` a *disposable* class [#f2]_.

	\footnote f1

		|footnote-errorcode|

	\footnote f2

		|footnote-disposable|

	\footnote f3

		|footnote-sync-id|

*/
