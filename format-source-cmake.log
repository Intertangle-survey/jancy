----------------------
27/02/2019 18:01:59 - C:\Projects\repos\ioninja\jancy\dependencies.cmake
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] if (UNIX AND NOT APPLE)
[+] if(UNIX AND NOT APPLE)
[-] 	set (AXL_IMPORT_LIST ${AXL_IMPORT_LIST} OPTIONAL libudev)
[+] 	set(AXL_IMPORT_LIST ${AXL_IMPORT_LIST} OPTIONAL libudev)
[-] endif ()
[+] endif()
[-] set (
[+] set(
----------------------
27/02/2019 18:01:59 - C:\Projects\repos\ioninja\jancy\settings.cmake
----------------------
[-] axl_chain_include (settings.cmake)
[+] axl_chain_include(settings.cmake)
[-] if (GCC)
[+] if(GCC)
[-] 	axl_override_setting_once (GCC_FLAG_CPP_RTTI "-fno-rtti")
[+] 	axl_override_setting_once(GCC_FLAG_CPP_RTTI "-fno-rtti")
[-] endif ()
[+] endif()
----------------------
27/02/2019 18:01:59 - C:\Projects\repos\ioninja\jancy\version.cmake
----------------------
[-] set (JANCY_VERSION_MAJOR     1)
[+] set(JANCY_VERSION_MAJOR     1)
[-] set (JANCY_VERSION_MINOR     8)
[+] set(JANCY_VERSION_MINOR     8)
[-] set (JANCY_VERSION_REVISION  5)
[+] set(JANCY_VERSION_REVISION  5)
[-] set (JANCY_VERSION_TAG)
[+] set(JANCY_VERSION_TAG)
[-] set (JANCY_VERSION_FULL "${JANCY_VERSION_MAJOR}.${JANCY_VERSION_MINOR}.${JANCY_VERSION_REVISION}")
[+] set(JANCY_VERSION_FULL "${JANCY_VERSION_MAJOR}.${JANCY_VERSION_MINOR}.${JANCY_VERSION_REVISION}")
[-] if (NOT "${JANCY_VERSION_TAG}" STREQUAL "")
[+] if(NOT "${JANCY_VERSION_TAG}" STREQUAL "")
[-] 	set (JANCY_VERSION_TAG_SUFFIX  " ${JANCY_VERSION_TAG}")
[+] 	set(JANCY_VERSION_TAG_SUFFIX  " ${JANCY_VERSION_TAG}")
[-] 	set (JANCY_VERSION_FILE_SUFFIX "${JANCY_VERSION_FULL}-${JANCY_VERSION_TAG}")
[+] 	set(JANCY_VERSION_FILE_SUFFIX "${JANCY_VERSION_FULL}-${JANCY_VERSION_TAG}")
[-] else ()
[+] else()
[-] 	set (JANCY_VERSION_TAG_SUFFIX)
[+] 	set(JANCY_VERSION_TAG_SUFFIX)
[-] 	set (JANCY_VERSION_FILE_SUFFIX "${JANCY_VERSION_FULL}")
[+] 	set(JANCY_VERSION_FILE_SUFFIX "${JANCY_VERSION_FULL}")
[-] endif ()
[+] endif()
[-] string (TIMESTAMP JANCY_VERSION_YEAR  "%Y")
[+] string(TIMESTAMP JANCY_VERSION_YEAR  "%Y")
[-] string (TIMESTAMP JANCY_VERSION_MONTH "%m")
[+] string(TIMESTAMP JANCY_VERSION_MONTH "%m")
[-] string (TIMESTAMP JANCY_VERSION_DAY   "%d")
[+] string(TIMESTAMP JANCY_VERSION_DAY   "%d")
[-] set (JANCY_VERSION_COMPANY   "Tibbo Technology Inc")
[+] set(JANCY_VERSION_COMPANY   "Tibbo Technology Inc")
[-] set (JANCY_VERSION_YEARS     "2012-${JANCY_VERSION_YEAR}")
[+] set(JANCY_VERSION_YEARS     "2012-${JANCY_VERSION_YEAR}")
----------------------
27/02/2019 18:01:59 - C:\Projects\repos\ioninja\jancy\cmake\axl_cmake.cmake
----------------------
[-] if (AXL_CMAKE_ONCE)
[+] if(AXL_CMAKE_ONCE)
[-] 	return ()
[+] 	return()
[-] endif ()
[+] endif()
[-] set (AXL_CMAKE_ONCE TRUE)
[+] set(AXL_CMAKE_ONCE TRUE)
[-] macro (
[+] macro(
[-] 	set (_DIR_LIST ${ARGN})
[+] 	set(_DIR_LIST ${ARGN})
[-] 	set (_FILE_PATH ${_FILE_NAME}-NOTFOUND)
[+] 	set(_FILE_PATH ${_FILE_NAME}-NOTFOUND)
[-] 	foreach (_DIR ${_DIR_LIST})
[+] 	foreach(_DIR ${_DIR_LIST})
[-] 		if (EXISTS ${_DIR}/${_FILE_NAME})
[+] 		if(EXISTS ${_DIR}/${_FILE_NAME})
[-] 			set (_FILE_PATH ${_DIR}/${_FILE_NAME})
[+] 			set(_FILE_PATH ${_DIR}/${_FILE_NAME})
[-] 			break ()
[+] 			break()
[-] 		endif ()
[+] 		endif()
[-] 	endforeach ()
[+] 	endforeach()
[-] 	set (${_RESULT} ${_FILE_PATH})
[+] 	set(${_RESULT} ${_FILE_PATH})
[-] endmacro ()
[+] endmacro()
[-] macro (
[+] macro(
[-] 	set (_DIR ${_START_DIR})
[+] 	set(_DIR ${_START_DIR})
[-] 	while (TRUE)
[+] 	while(TRUE)
[-] 		if (EXISTS ${_DIR}/${_FILE_NAME})
[+] 		if(EXISTS ${_DIR}/${_FILE_NAME})
[-] 			set (_FILE_PATH ${_DIR}/${_FILE_NAME})
[+] 			set(_FILE_PATH ${_DIR}/${_FILE_NAME})
[-] 			break ()
[+] 			break()
[-] 		endif ()
[+] 		endif()
[-] 		get_filename_component (_PARENT_DIR "${_DIR}/.." ABSOLUTE)
[+] 		get_filename_component(_PARENT_DIR "${_DIR}/.." ABSOLUTE)
[-] 		if (${_DIR} STREQUAL ${_PARENT_DIR})
[+] 		if(${_DIR} STREQUAL ${_PARENT_DIR})
[-] 			set (_FILE_PATH ${_FILE_NAME}-NOTFOUND)
[+] 			set(_FILE_PATH ${_FILE_NAME}-NOTFOUND)
[-] 			break ()
[+] 			break()
[-] 		endif ()
[+] 		endif()
[-] 		set (_DIR ${_PARENT_DIR})
[+] 		set(_DIR ${_PARENT_DIR})
[-] 	endwhile ()
[+] 	endwhile()
[-] 	set (${_RESULT} ${_FILE_PATH})
[+] 	set(${_RESULT} ${_FILE_PATH})
[-] endmacro ()
[+] endmacro()
[-] get_filename_component (AXL_CMAKE_ORIGIN_DIR ${CMAKE_PARENT_LIST_FILE} DIRECTORY)
[+] get_filename_component(AXL_CMAKE_ORIGIN_DIR ${CMAKE_PARENT_LIST_FILE} DIRECTORY)
[-] set (AXL_CMAKE_ORIGIN_FILE ${CMAKE_PARENT_LIST_FILE})
[+] set(AXL_CMAKE_ORIGIN_FILE ${CMAKE_PARENT_LIST_FILE})
[-] if (NOT EXISTS ${AXL_CMAKE_ORIGIN_DIR}/dependencies.cmake)
[+] if(NOT EXISTS ${AXL_CMAKE_ORIGIN_DIR}/dependencies.cmake)
[-] 	message (FATAL_ERROR "dependencies.cmake not found at: ${AXL_CMAKE_ORIGIN_DIR}")
[+] 	message(FATAL_ERROR "dependencies.cmake not found at: ${AXL_CMAKE_ORIGIN_DIR}")
[-] endif ()
[+] endif()
[-] if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/axl_init.cmake")
[+] if(EXISTS "${CMAKE_CURRENT_LIST_DIR}/axl_init.cmake")
[-] 	set (_AXL_INIT_CMAKE "${CMAKE_CURRENT_LIST_DIR}/axl_init.cmake")
[+] 	set(_AXL_INIT_CMAKE "${CMAKE_CURRENT_LIST_DIR}/axl_init.cmake")
[-] else ()
[+] else()
[-] 	if (NOT AXL_CMAKE_DIR)
[+] 	if(NOT AXL_CMAKE_DIR)
[-] 		axl_find_file_recurse_parent_dirs (_PATHS_CMAKE paths.cmake ${AXL_CMAKE_ORIGIN_DIR})
[+] 		axl_find_file_recurse_parent_dirs(_PATHS_CMAKE paths.cmake ${AXL_CMAKE_ORIGIN_DIR})
[-] 		if (NOT _PATHS_CMAKE)
[+] 		if(NOT _PATHS_CMAKE)
[-] 			include (${AXL_CMAKE_ORIGIN_DIR}/dependencies.cmake)
[+] 			include(${AXL_CMAKE_ORIGIN_DIR}/dependencies.cmake)
[-] 			string (REPLACE ";" " " _PATH_LIST "${AXL_PATH_LIST}")
[+] 			string(REPLACE ";" " " _PATH_LIST "${AXL_PATH_LIST}")
[-] 			message (FATAL_ERROR "AXL_CMAKE_DIR not found, create paths.cmake and fill it with definitions for: ${_PATH_LIST}")
[+] 			message(FATAL_ERROR "AXL_CMAKE_DIR not found, create paths.cmake and fill it with definitions for: ${_PATH_LIST}")
[-] 		endif ()
[+] 		endif()
[-] 		include (${_PATHS_CMAKE})
[+] 		include(${_PATHS_CMAKE})
[-] 		if (NOT AXL_CMAKE_DIR)
[+] 		if(NOT AXL_CMAKE_DIR)
[-] 			message (FATAL_ERROR "AXL_CMAKE_DIR not found, check your path definitions at: ${_PATHS_CMAKE}")
[+] 			message(FATAL_ERROR "AXL_CMAKE_DIR not found, check your path definitions at: ${_PATHS_CMAKE}")
[-] 		endif ()
[+] 		endif()
[-] 	endif ()
[+] 	endif()
[-] 	axl_find_file (_AXL_INIT_CMAKE axl_init.cmake ${AXL_CMAKE_DIR})
[+] 	axl_find_file(_AXL_INIT_CMAKE axl_init.cmake ${AXL_CMAKE_DIR})
[-] 	if (NOT _AXL_INIT_CMAKE)
[+] 	if(NOT _AXL_INIT_CMAKE)
[-] 		message (FATAL_ERROR "axl_init.cmake not found at AXL_CMAKE_DIR: ${AXL_CMAKE_DIR}")
[+] 		message(FATAL_ERROR "axl_init.cmake not found at AXL_CMAKE_DIR: ${AXL_CMAKE_DIR}")
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] include (${_AXL_INIT_CMAKE} NO_POLICY_SCOPE)
[+] include(${_AXL_INIT_CMAKE} NO_POLICY_SCOPE)
----------------------
27/02/2019 18:01:59 - C:\Projects\repos\ioninja\jancy\cmake\import_jancy.cmake
----------------------
[-] axl_find_file (
[+] axl_find_file(
[-] if (_CONFIG_CMAKE)
[+] if(_CONFIG_CMAKE)
[-] 	include (${_CONFIG_CMAKE})
[+] 	include(${_CONFIG_CMAKE})
[-] 	axl_message ("Jancy ${JANCY_VERSION_FULL} paths:")
[+] 	axl_message("Jancy ${JANCY_VERSION_FULL} paths:")
[-] 	axl_message ("    CMake files:" "${JANCY_CMAKE_DIR}")
[+] 	axl_message("    CMake files:" "${JANCY_CMAKE_DIR}")
[-] 	axl_message ("    Includes:"    "${JANCY_INC_DIR}")
[+] 	axl_message("    Includes:"    "${JANCY_INC_DIR}")
[-] 	axl_message ("    Libraries:"   "${JANCY_LIB_DIR}")
[+] 	axl_message("    Libraries:"   "${JANCY_LIB_DIR}")
[-] 	axl_message ("    DLLs:"        "${JANCY_DLL_DIR}")
[+] 	axl_message("    DLLs:"        "${JANCY_DLL_DIR}")
[-] 	axl_message ("    Sphinx exts:" "${JANCY_SPHINX_DIR}")
[+] 	axl_message("    Sphinx exts:" "${JANCY_SPHINX_DIR}")
[-] 	axl_message ("    Jancy DLL:"   "${JANCY_DLL_NAME}")
[+] 	axl_message("    Jancy DLL:"   "${JANCY_DLL_NAME}")
[-] 	set (JANCY_FOUND TRUE)
[+] 	set(JANCY_FOUND TRUE)
[-] else ()
[+] else()
[-] 	set (JANCY_FOUND FALSE)
[+] 	set(JANCY_FOUND FALSE)
[-] endif ()
[+] endif()
