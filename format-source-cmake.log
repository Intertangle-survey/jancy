----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\CMakeLists.txt
----------------------
[-] project (jancy)
[+] project(jancy)
[-] cmake_minimum_required (VERSION 3.3)
[+] cmake_minimum_required(VERSION 3.3)
[-] include (cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[+] include(cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[-] set (JANCY_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[+] set(JANCY_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[-] set (JANCY_SRC_DIR      ${CMAKE_CURRENT_LIST_DIR}/src)
[+] set(JANCY_SRC_DIR      ${CMAKE_CURRENT_LIST_DIR}/src)
[-] set (JANCY_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] set(JANCY_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] set (JANCY_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] set(JANCY_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] set (JANCY_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[+] set(JANCY_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[-] set (JANCY_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[+] set(JANCY_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] 	set(JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] 	set(JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] endif ()
[+] endif()
[-] set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JANCY_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JANCY_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${JANCY_DLL_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${JANCY_DLL_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JANCY_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JANCY_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (JANCY_INSTALL_BIN_SUBDIR bin)
[+] set(JANCY_INSTALL_BIN_SUBDIR bin)
[-] set (JANCY_INSTALL_LIB_SUBDIR lib)
[+] set(JANCY_INSTALL_LIB_SUBDIR lib)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_INSTALL_INC_SUBDIR     include)
[+] 	set(JANCY_INSTALL_INC_SUBDIR     include)
[-] 	set (JANCY_INSTALL_CMAKE_SUBDIR   cmake)
[+] 	set(JANCY_INSTALL_CMAKE_SUBDIR   cmake)
[-] 	set (JANCY_INSTALL_DLL_SUBDIR     bin)
[+] 	set(JANCY_INSTALL_DLL_SUBDIR     bin)
[-] 	set (JANCY_INSTALL_JNCX_SUBDIR    bin)
[+] 	set(JANCY_INSTALL_JNCX_SUBDIR    bin)
[-] 	set (JANCY_INSTALL_TOOL_SUBDIR    tools)
[+] 	set(JANCY_INSTALL_TOOL_SUBDIR    tools)
[-] 	set (JANCY_INSTALL_SAMPLE_SUBDIR  samples)
[+] 	set(JANCY_INSTALL_SAMPLE_SUBDIR  samples)
[-] 	set (JANCY_INSTALL_SPHINX_SUBDIR  sphinx)
[+] 	set(JANCY_INSTALL_SPHINX_SUBDIR  sphinx)
[-] 	set (JANCY_INSTALL_DOC_SUBDIR     doc)
[+] 	set(JANCY_INSTALL_DOC_SUBDIR     doc)
[-] 	set (JANCY_INSTALL_LICENSE_SUBDIR license)
[+] 	set(JANCY_INSTALL_LICENSE_SUBDIR license)
[-] else ()
[+] else()
[-] 	set (JANCY_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[+] 	set(JANCY_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[-] 	set (JANCY_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[+] 	set(JANCY_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[-] 	set (JANCY_INSTALL_DLL_SUBDIR     lib)
[+] 	set(JANCY_INSTALL_DLL_SUBDIR     lib)
[-] 	set (JANCY_INSTALL_JNCX_SUBDIR    share/${CMAKE_PROJECT_NAME}/extensions)
[+] 	set(JANCY_INSTALL_JNCX_SUBDIR    share/${CMAKE_PROJECT_NAME}/extensions)
[-] 	set (JANCY_INSTALL_TOOL_SUBDIR    share/${CMAKE_PROJECT_NAME}/tools)
[+] 	set(JANCY_INSTALL_TOOL_SUBDIR    share/${CMAKE_PROJECT_NAME}/tools)
[-] 	set (JANCY_INSTALL_SAMPLE_SUBDIR  share/${CMAKE_PROJECT_NAME}/samples)
[+] 	set(JANCY_INSTALL_SAMPLE_SUBDIR  share/${CMAKE_PROJECT_NAME}/samples)
[-] 	set (JANCY_INSTALL_SPHINX_SUBDIR  share/${CMAKE_PROJECT_NAME}/sphinx)
[+] 	set(JANCY_INSTALL_SPHINX_SUBDIR  share/${CMAKE_PROJECT_NAME}/sphinx)
[-] 	set (JANCY_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[+] 	set(JANCY_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[-] 	set (JANCY_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[+] 	set(JANCY_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		set (CMAKE_INSTALL_RPATH "@loader_path/../lib")
[+] 		set(CMAKE_INSTALL_RPATH "@loader_path/../lib")
[-] 	else ()
[+] 	else()
[-] 		set (CMAKE_INSTALL_RPATH "$ORIGIN/../lib")
[+] 		set(CMAKE_INSTALL_RPATH "$ORIGIN/../lib")
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (cmake)
[+] add_subdirectory(cmake)
[-] include (${CMAKE_CURRENT_BINARY_DIR}/cmake/jancy_config.cmake)
[+] include(${CMAKE_CURRENT_BINARY_DIR}/cmake/jancy_config.cmake)
[-] add_subdirectory (src)
[+] add_subdirectory(src)
[-] add_subdirectory (doc)
[+] add_subdirectory(doc)
[-] add_subdirectory (samples)
[+] add_subdirectory(samples)
[-] add_subdirectory (test)
[+] add_subdirectory(test)
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] set (CPACK_PACKAGE_VERSION_MAJOR ${JANCY_VERSION_MAJOR})
[+] set(CPACK_PACKAGE_VERSION_MAJOR ${JANCY_VERSION_MAJOR})
[-] set (CPACK_PACKAGE_VERSION_MINOR ${JANCY_VERSION_MINOR})
[+] set(CPACK_PACKAGE_VERSION_MINOR ${JANCY_VERSION_MINOR})
[-] set (CPACK_PACKAGE_VERSION_PATCH ${JANCY_VERSION_REVISION})
[+] set(CPACK_PACKAGE_VERSION_PATCH ${JANCY_VERSION_REVISION})
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (CPACK_SOURCE_GENERATOR 7Z)
[+] 	set(CPACK_SOURCE_GENERATOR 7Z)
[-] else ()
[+] else()
[-] 	set (CPACK_SOURCE_GENERATOR TXZ)
[+] 	set(CPACK_SOURCE_GENERATOR TXZ)
[-] endif ()
[+] endif()
[-] set (CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[+] set(CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[-] set (CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-src)
[+] set(CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-src)
[-] if (APPLE)
[+] if(APPLE)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-mac)
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-mac)
[-] else ()
[+] else()
[-] 	string (TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[+] 	string(TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[-] endif ()
[+] endif()
[-] include (CPack)
[+] include(CPack)
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\CMakeLists.txt
----------------------
[-] project (jancy)
[+] project(jancy)
[-] cmake_minimum_required (VERSION 3.3)
[+] cmake_minimum_required(VERSION 3.3)
[-] include (cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[+] include(cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[-] set (JANCY_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[+] set(JANCY_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[-] set (JANCY_SRC_DIR      ${CMAKE_CURRENT_LIST_DIR}/src)
[+] set(JANCY_SRC_DIR      ${CMAKE_CURRENT_LIST_DIR}/src)
[-] set (JANCY_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] set(JANCY_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] set (JANCY_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] set(JANCY_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] set (JANCY_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[+] set(JANCY_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[-] set (JANCY_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[+] set(JANCY_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] 	set(JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] 	set(JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] endif ()
[+] endif()
[-] set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JANCY_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JANCY_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${JANCY_DLL_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${JANCY_DLL_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JANCY_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JANCY_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (JANCY_INSTALL_BIN_SUBDIR bin)
[+] set(JANCY_INSTALL_BIN_SUBDIR bin)
[-] set (JANCY_INSTALL_LIB_SUBDIR lib)
[+] set(JANCY_INSTALL_LIB_SUBDIR lib)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_INSTALL_INC_SUBDIR     include)
[+] 	set(JANCY_INSTALL_INC_SUBDIR     include)
[-] 	set (JANCY_INSTALL_CMAKE_SUBDIR   cmake)
[+] 	set(JANCY_INSTALL_CMAKE_SUBDIR   cmake)
[-] 	set (JANCY_INSTALL_DLL_SUBDIR     bin)
[+] 	set(JANCY_INSTALL_DLL_SUBDIR     bin)
[-] 	set (JANCY_INSTALL_JNCX_SUBDIR    bin)
[+] 	set(JANCY_INSTALL_JNCX_SUBDIR    bin)
[-] 	set (JANCY_INSTALL_TOOL_SUBDIR    tools)
[+] 	set(JANCY_INSTALL_TOOL_SUBDIR    tools)
[-] 	set (JANCY_INSTALL_SAMPLE_SUBDIR  samples)
[+] 	set(JANCY_INSTALL_SAMPLE_SUBDIR  samples)
[-] 	set (JANCY_INSTALL_SPHINX_SUBDIR  sphinx)
[+] 	set(JANCY_INSTALL_SPHINX_SUBDIR  sphinx)
[-] 	set (JANCY_INSTALL_DOC_SUBDIR     doc)
[+] 	set(JANCY_INSTALL_DOC_SUBDIR     doc)
[-] 	set (JANCY_INSTALL_LICENSE_SUBDIR license)
[+] 	set(JANCY_INSTALL_LICENSE_SUBDIR license)
[-] else ()
[+] else()
[-] 	set (JANCY_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[+] 	set(JANCY_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[-] 	set (JANCY_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[+] 	set(JANCY_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[-] 	set (JANCY_INSTALL_DLL_SUBDIR     lib)
[+] 	set(JANCY_INSTALL_DLL_SUBDIR     lib)
[-] 	set (JANCY_INSTALL_JNCX_SUBDIR    share/${CMAKE_PROJECT_NAME}/extensions)
[+] 	set(JANCY_INSTALL_JNCX_SUBDIR    share/${CMAKE_PROJECT_NAME}/extensions)
[-] 	set (JANCY_INSTALL_TOOL_SUBDIR    share/${CMAKE_PROJECT_NAME}/tools)
[+] 	set(JANCY_INSTALL_TOOL_SUBDIR    share/${CMAKE_PROJECT_NAME}/tools)
[-] 	set (JANCY_INSTALL_SAMPLE_SUBDIR  share/${CMAKE_PROJECT_NAME}/samples)
[+] 	set(JANCY_INSTALL_SAMPLE_SUBDIR  share/${CMAKE_PROJECT_NAME}/samples)
[-] 	set (JANCY_INSTALL_SPHINX_SUBDIR  share/${CMAKE_PROJECT_NAME}/sphinx)
[+] 	set(JANCY_INSTALL_SPHINX_SUBDIR  share/${CMAKE_PROJECT_NAME}/sphinx)
[-] 	set (JANCY_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[+] 	set(JANCY_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[-] 	set (JANCY_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[+] 	set(JANCY_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		set (CMAKE_INSTALL_RPATH "@loader_path/../lib")
[+] 		set(CMAKE_INSTALL_RPATH "@loader_path/../lib")
[-] 	else ()
[+] 	else()
[-] 		set (CMAKE_INSTALL_RPATH "$ORIGIN/../lib")
[+] 		set(CMAKE_INSTALL_RPATH "$ORIGIN/../lib")
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (cmake)
[+] add_subdirectory(cmake)
[-] include (${CMAKE_CURRENT_BINARY_DIR}/cmake/jancy_config.cmake)
[+] include(${CMAKE_CURRENT_BINARY_DIR}/cmake/jancy_config.cmake)
[-] add_subdirectory (src)
[+] add_subdirectory(src)
[-] add_subdirectory (doc)
[+] add_subdirectory(doc)
[-] add_subdirectory (samples)
[+] add_subdirectory(samples)
[-] add_subdirectory (test)
[+] add_subdirectory(test)
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] set (CPACK_PACKAGE_VERSION_MAJOR ${JANCY_VERSION_MAJOR})
[+] set(CPACK_PACKAGE_VERSION_MAJOR ${JANCY_VERSION_MAJOR})
[-] set (CPACK_PACKAGE_VERSION_MINOR ${JANCY_VERSION_MINOR})
[+] set(CPACK_PACKAGE_VERSION_MINOR ${JANCY_VERSION_MINOR})
[-] set (CPACK_PACKAGE_VERSION_PATCH ${JANCY_VERSION_REVISION})
[+] set(CPACK_PACKAGE_VERSION_PATCH ${JANCY_VERSION_REVISION})
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (CPACK_SOURCE_GENERATOR 7Z)
[+] 	set(CPACK_SOURCE_GENERATOR 7Z)
[-] else ()
[+] else()
[-] 	set (CPACK_SOURCE_GENERATOR TXZ)
[+] 	set(CPACK_SOURCE_GENERATOR TXZ)
[-] endif ()
[+] endif()
[-] set (CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[+] set(CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[-] set (CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-src)
[+] set(CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-src)
[-] if (APPLE)
[+] if(APPLE)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-mac)
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-mac)
[-] else ()
[+] else()
[-] 	string (TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[+] 	string(TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[-] endif ()
[+] endif()
[-] include (CPack)
[+] include(CPack)
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\cmake\jancy_config_build.cmake.in
----------------------
[-] set (JANCY_BIN_BASE_DIR  "@JANCY_BIN_BASE_DIR@")
[+] set(JANCY_BIN_BASE_DIR  "@JANCY_BIN_BASE_DIR@")
[-] set (JANCY_BIN_DIR       "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_BIN_DIR       "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_DLL_BASE_DIR  "@JANCY_DLL_BASE_DIR@")
[+] set(JANCY_DLL_BASE_DIR  "@JANCY_DLL_BASE_DIR@")
[-] set (JANCY_DLL_DIR       "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_DLL_DIR       "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_JNCX_BASE_DIR "@JANCY_DLL_BASE_DIR@")
[+] set(JANCY_JNCX_BASE_DIR "@JANCY_DLL_BASE_DIR@")
[-] set (JANCY_JNCX_DIR      "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_JNCX_DIR      "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_INC_DIR       "@JANCY_ROOT_DIR@/include")
[+] set(JANCY_INC_DIR       "@JANCY_ROOT_DIR@/include")
[-] set (JANCY_LIB_BASE_DIR  "@JANCY_LIB_BASE_DIR@")
[+] set(JANCY_LIB_BASE_DIR  "@JANCY_LIB_BASE_DIR@")
[-] set (JANCY_LIB_DIR       "@JANCY_LIB_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_LIB_DIR       "@JANCY_LIB_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_SPHINX_DIR    "@JANCY_ROOT_DIR@/sphinx")
[+] set(JANCY_SPHINX_DIR    "@JANCY_ROOT_DIR@/sphinx")
[-] set (JANCY_EXE           "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}/jancy")
[+] set(JANCY_EXE           "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}/jancy")
[-] set (JNC2CPP_PL          "@JANCY_ROOT_DIR@/tools/jnc2cpp/jnc2cpp.pl")
[+] set(JNC2CPP_PL          "@JANCY_ROOT_DIR@/tools/jnc2cpp/jnc2cpp.pl")
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[+] 	set(JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_NAME jancy)
[+] 	set(JANCY_DLL_NAME jancy)
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] include ("@JANCY_ROOT_DIR@/version.cmake")
[+] include("@JANCY_ROOT_DIR@/version.cmake")
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\cmake\jancy_config_install.cmake.in
----------------------
[-] get_filename_component (JANCY_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@JANCY_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[+] get_filename_component(JANCY_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@JANCY_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[-] set (JANCY_BIN_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_BIN_SUBDIR@")
[+] set(JANCY_BIN_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_BIN_SUBDIR@")
[-] set (JANCY_DLL_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_DLL_SUBDIR@")
[+] set(JANCY_DLL_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_DLL_SUBDIR@")
[-] set (JANCY_JNCX_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_JNCX_SUBDIR@")
[+] set(JANCY_JNCX_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_JNCX_SUBDIR@")
[-] set (JANCY_INC_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_INC_SUBDIR@")
[+] set(JANCY_INC_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_INC_SUBDIR@")
[-] set (JANCY_LIB_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_LIB_SUBDIR@")
[+] set(JANCY_LIB_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_LIB_SUBDIR@")
[-] set (JANCY_CMAKE_DIR  "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_CMAKE_SUBDIR@")
[+] set(JANCY_CMAKE_DIR  "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_CMAKE_SUBDIR@")
[-] set (JANCY_SPHINX_DIR "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_SPHINX_SUBDIR@")
[+] set(JANCY_SPHINX_DIR "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_SPHINX_SUBDIR@")
[-] set (JANCY_TOOL_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_TOOL_SUBDIR@")
[+] set(JANCY_TOOL_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_TOOL_SUBDIR@")
[-] set (JANCY_EXE        "${JANCY_BIN_DIR}/jancy")
[+] set(JANCY_EXE        "${JANCY_BIN_DIR}/jancy")
[-] set (JNC2CPP_PL       "${JANCY_TOOL_DIR}/jnc2cpp/jnc2cpp.pl")
[+] set(JNC2CPP_PL       "${JANCY_TOOL_DIR}/jnc2cpp/jnc2cpp.pl")
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[+] 	set(JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_NAME jancy)
[+] 	set(JANCY_DLL_NAME jancy)
[-] endif ()
[+] endif()
[-] include ("${CMAKE_CURRENT_LIST_DIR}/jancy_version.cmake")
[+] include("${CMAKE_CURRENT_LIST_DIR}/jancy_version.cmake")
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\cmake\CMakeLists.txt
----------------------
[-] include (${JANCY_ROOT_DIR}/version.cmake)
[+] include(${JANCY_ROOT_DIR}/version.cmake)
[-] string (REGEX REPLACE "[a-z]+" ".." JANCY_INSTALL_ROOT_SUBDIR ${JANCY_INSTALL_CMAKE_SUBDIR})
[+] string(REGEX REPLACE "[a-z]+" ".." JANCY_INSTALL_ROOT_SUBDIR ${JANCY_INSTALL_CMAKE_SUBDIR})
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\CMakeLists.txt
----------------------
[-] add_subdirectory (index)
[+] add_subdirectory(index)
[-] add_subdirectory (language)
[+] add_subdirectory(language)
[-] add_subdirectory (extensions)
[+] add_subdirectory(extensions)
[-] add_subdirectory (compiler)
[+] add_subdirectory(compiler)
[-] add_subdirectory (grammar)
[+] add_subdirectory(grammar)
[-] add_subdirectory (build-guide)
[+] add_subdirectory(build-guide)
[-] add_subdirectory (stdlib)
[+] add_subdirectory(stdlib)
[-] add_subdirectory (api)
[+] add_subdirectory(api)
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\api\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy C API Reference")
[+] set(DOC_NAME "Jancy C API Reference")
[-] set (TEX_BASE_NAME jancy-api-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-api-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/api)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/api)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${DOXYGEN_EXE})
[+] set(XMLGEN_EXE ${DOXYGEN_EXE})
[-] set (XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\build-guide\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Build Guide")
[+] set(DOC_NAME "Jancy Build Guide")
[-] set (TEX_BASE_NAME jancy-build-guide-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-build-guide-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/build-guide)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/build-guide)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\compiler\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Compiler Overview")
[+] set(DOC_NAME "Jancy Compiler Overview")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/compiler)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/compiler)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\extensions\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Writing Jancy Extensions")
[+] set(DOC_NAME "Writing Jancy Extensions")
[-] set (TEX_BASE_NAME jancy-extensions-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-extensions-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/extensions)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/extensions)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\grammar\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Grammar Reference")
[+] set(DOC_NAME "Jancy Grammar Reference")
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/grammar)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/grammar)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" GRACO_EXE ${GRACO_EXE})
[+] 	string(REPLACE "$(Configuration)" "%1" GRACO_EXE ${GRACO_EXE})
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:57 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\index\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Documentation Index")
[+] set(DOC_NAME "Jancy Documentation Index")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\language\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Language Manual")
[+] set(DOC_NAME "Jancy Language Manual")
[-] set (TEX_BASE_NAME jancy-language-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-language-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/language)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/language)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\doc\stdlib\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Standard Library Reference")
[+] set(DOC_NAME "Jancy Standard Library Reference")
[-] set (TEX_BASE_NAME jancy-stdlib-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-stdlib-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/stdlib)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/stdlib)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (_EXT_DIR ${JANCY_SRC_DIR}/jnc_ext)
[+] set(_EXT_DIR ${JANCY_SRC_DIR}/jnc_ext)
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${JANCY_EXE})
[+] set(XMLGEN_EXE ${JANCY_EXE})
[-] set (XMLGEN_CMD_LINE ${JANCY_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${JANCY_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" XMLGEN_EXE "${XMLGEN_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" XMLGEN_EXE "${XMLGEN_EXE}")
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\samples\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc)
[+] add_subdirectory(jnc)
[-] option (
[+] option(
[-] if (BUILD_JNC_SAMPLE_01_EMBED_C)
[+] if(BUILD_JNC_SAMPLE_01_EMBED_C)
[-] 	add_subdirectory (jnc_sample_01_embed_c)
[+] 	add_subdirectory(jnc_sample_01_embed_c)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_JNC_SAMPLE_02_EMBED_CPP)
[+] if(BUILD_JNC_SAMPLE_02_EMBED_CPP)
[-] 	add_subdirectory (jnc_sample_02_embed_cpp)
[+] 	add_subdirectory(jnc_sample_02_embed_cpp)
[-] endif ()
[+] endif()
[-] if (${QT_FOUND})
[+] if(${QT_FOUND})
[-] 	option (
[+] 	option(
[-] 		"Build sample jnc_sample_03_dialog (QT bindings)"
[+] 		"Build sample jnc_sample_03_dialog(QT bindings)"
[-] 	if (BUILD_JNC_SAMPLE_03_DIALOG)
[+] 	if(BUILD_JNC_SAMPLE_03_DIALOG)
[-] 		add_subdirectory (jnc_sample_03_dialog)
[+] 		add_subdirectory(jnc_sample_03_dialog)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\samples\jnc\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] if (${BUILD_JNC_APP})
[+] if(${BUILD_JNC_APP})
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\samples\jnc_sample_01_embed_c\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H pch.h)
[+] set(PCH_H pch.h)
[-] set (PCH_C pch.c)
[+] set(PCH_C pch.c)
[-] source_group (
[+] source_group(
[-] include_directories (${JANCY_INC_DIR})
[+] include_directories(${JANCY_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_01_embed_c)
[+] 	target_link_llvm_jit_libraries(jnc_sample_01_embed_c)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\samples\jnc_sample_02_embed_cpp\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${JANCY_INC_DIR})
[+] include_directories(${JANCY_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_02_embed_cpp)
[+] 	target_link_llvm_jit_libraries(jnc_sample_02_embed_cpp)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\samples\jnc_sample_03_dialog\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] set (
[+] set(
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] qt5_wrap_cpp (
[+] qt5_wrap_cpp(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (MSVC)
[+] if(MSVC)
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (jnc_sample_03_dialog Widgets)
[+] qt5_use_modules(jnc_sample_03_dialog Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_03_dialog)
[+] 	target_link_llvm_jit_libraries(jnc_sample_03_dialog)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		add_qt_rpath_link ()
[+] 		add_qt_rpath_link()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
[-] axl_detect_host_cpu (_CPU)
[+] axl_detect_host_cpu(_CPU)
[-] if (WIN32 OR (LINUX AND "${TARGET_CPU}" STREQUAL "${_CPU}"))
[+] if(WIN32 OR(LINUX AND "${TARGET_CPU}" STREQUAL "${_CPU}"))
[-] 	add_test (
[+] 	add_test(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc_ct)
[+] add_subdirectory(jnc_ct)
[-] add_subdirectory (jnc_rt)
[+] add_subdirectory(jnc_rt)
[-] add_subdirectory (jnc_ext) # ext BEFORE everything api, app & dll (we need BUILD_JNC_IO_USB)
[+] add_subdirectory(jnc_ext) # ext BEFORE everything api, app & dll (we need BUILD_JNC_IO_USB)
[-] add_subdirectory (jnc_api)
[+] add_subdirectory(jnc_api)
[-] option (
[+] option(
[-] option (
[+] option(
[-] option (
[+] option(
[-] 	"Build jnc_stdlib.jncx (for IDE)"
[+] 	"Build jnc_stdlib.jncx(for IDE)"
[-] if (BUILD_JNC_APP)
[+] if(BUILD_JNC_APP)
[-] 	add_subdirectory (jnc_app)
[+] 	add_subdirectory(jnc_app)
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	set (JNC_LIBRARY_OBJECT OBJECT)
[+] 	set(JNC_LIBRARY_OBJECT OBJECT)
[-] 	add_subdirectory (jnc_dll)
[+] 	add_subdirectory(jnc_dll)
[-] else ()
[+] else()
[-] 	set (JNC_LIBRARY_OBJECT)
[+] 	set(JNC_LIBRARY_OBJECT)
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_STDLIB)
[+] if(BUILD_JNC_STDLIB)
[-] 	add_subdirectory (jnc_stdlib)
[+] 	add_subdirectory(jnc_stdlib)
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_api\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H            pch.h)
[+] set(PCH_H            pch.h)
[-] set (PCH_STATIC_CPP   pch_static.cpp)
[+] set(PCH_STATIC_CPP   pch_static.cpp)
[-] set (PCH_STATIC_O_CPP pch_static_o.cpp)
[+] set(PCH_STATIC_O_CPP pch_static_o.cpp)
[-] set (PCH_DYNAMIC_CPP  pch_dynamic.cpp)
[+] set(PCH_DYNAMIC_CPP  pch_dynamic.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	add_definitions (-D_JNC_IO_USB=1)
[+] 	add_definitions(-D_JNC_IO_USB=1)
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_app\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_app)
[+] 	target_link_llvm_jit_libraries(jnc_app)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] install (
[+] install(
[-] macro (
[+] macro(
[-] 	set (_FLAGS "--print-retval --import-dir ${JANCY_DLL_BASE_DIR}/$<CONFIGURATION> ${JANCY_TEST_OPT_LEVEL}")
[+] 	set(_FLAGS "--print-retval --import-dir ${JANCY_DLL_BASE_DIR}/$<CONFIGURATION> ${JANCY_TEST_OPT_LEVEL}")
[-] 	if (UNIX)
[+] 	if(UNIX)
[-] 		set (_FLAGS "${_FLAGS} --debug-info")
[+] 		set(_FLAGS "${_FLAGS} --debug-info")
[-] 	endif ()
[+] 	endif()
[-] 	string (REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[+] 	string(REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[-] 	set (_ARG_LIST ${ARGN})
[+] 	set(_ARG_LIST ${ARGN})
[-] 	set (_DIR)
[+] 	set(_DIR)
[-] 	set (_PREFIX)
[+] 	set(_PREFIX)
[-] 	set (_FILE_LIST)
[+] 	set(_FILE_LIST)
[-] 	set (_FIRST_FILE)
[+] 	set(_FIRST_FILE)
[-] 	set (_IS_DIR FALSE)
[+] 	set(_IS_DIR FALSE)
[-] 	set (_IS_PREFIX FALSE)
[+] 	set(_IS_PREFIX FALSE)
[-] 	set (_IS_FLAGS FALSE)
[+] 	set(_IS_FLAGS FALSE)
[-] 	set (_IS_FILE_LIST FALSE)
[+] 	set(_IS_FILE_LIST FALSE)
[-] 	foreach (_ARG ${_ARG_LIST})
[+] 	foreach(_ARG ${_ARG_LIST})
[-] 		if (_IS_DIR)
[+] 		if(_IS_DIR)
[-] 			set (_DIR ${_ARG})
[+] 			set(_DIR ${_ARG})
[-] 			set (_IS_DIR FALSE)
[+] 			set(_IS_DIR FALSE)
[-] 		elseif (_IS_PREFIX)
[+] 		elseif(_IS_PREFIX)
[-] 			set (_PREFIX ${_ARG})
[+] 			set(_PREFIX ${_ARG})
[-] 			set (_IS_PREFIX FALSE)
[+] 			set(_IS_PREFIX FALSE)
[-] 		elseif (_IS_FLAGS)
[+] 		elseif(_IS_FLAGS)
[-] 			set (_FLAGS "${_FLAGS} ${_ARG}")
[+] 			set(_FLAGS "${_FLAGS} ${_ARG}")
[-] 			set (_IS_FLAGS FALSE)
[+] 			set(_IS_FLAGS FALSE)
[-] 			string (REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[+] 			string(REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[-] 		elseif ("${_ARG}" STREQUAL "WORKING_DIRECTORY")
[+] 		elseif("${_ARG}" STREQUAL "WORKING_DIRECTORY")
[-] 			set (_IS_DIR TRUE)
[+] 			set(_IS_DIR TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "NAME_PREFIX")
[+] 		elseif("${_ARG}" STREQUAL "NAME_PREFIX")
[-] 			set (_IS_PREFIX TRUE)
[+] 			set(_IS_PREFIX TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "FLAGS")
[+] 		elseif("${_ARG}" STREQUAL "FLAGS")
[-] 			set (_IS_FLAGS TRUE)
[+] 			set(_IS_FLAGS TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "BEGIN_FILE_LIST")
[+] 		elseif("${_ARG}" STREQUAL "BEGIN_FILE_LIST")
[-] 			set (_IS_FILE_LIST TRUE)
[+] 			set(_IS_FILE_LIST TRUE)
[-] 			set (_FILE_LIST)
[+] 			set(_FILE_LIST)
[-] 		elseif (_IS_FILE_LIST AND NOT "${_ARG}" STREQUAL "END_FILE_LIST")
[+] 		elseif(_IS_FILE_LIST AND NOT "${_ARG}" STREQUAL "END_FILE_LIST")
[-] 			if ("${_FILE_LIST}" STREQUAL "")
[+] 			if("${_FILE_LIST}" STREQUAL "")
[-] 				set (_FIRST_FILE ${_ARG})
[+] 				set(_FIRST_FILE ${_ARG})
[-] 			endif ()
[+] 			endif()
[-] 			list (APPEND _FILE_LIST ${_ARG})
[+] 			list(APPEND _FILE_LIST ${_ARG})
[-] 		else ()
[+] 		else()
[-] 			if (_IS_FILE_LIST)
[+] 			if(_IS_FILE_LIST)
[-] 				set (_IS_FILE_LIST FALSE)
[+] 				set(_IS_FILE_LIST FALSE)
[-] 			else ()
[+] 			else()
[-] 				set (_FIRST_FILE ${_ARG})
[+] 				set(_FIRST_FILE ${_ARG})
[-] 				set (_FILE_LIST ${_ARG})
[+] 				set(_FILE_LIST ${_ARG})
[-] 			endif ()
[+] 			endif()
[-] 			if ("${_DIR}" STREQUAL "")
[+] 			if("${_DIR}" STREQUAL "")
[-] 				add_test (
[+] 				add_test(
[-] 			else ()
[+] 			else()
[-] 				add_test (
[+] 				add_test(
[-] 			endif ()
[+] 			endif()
[-] 		endif ()
[+] 		endif()
[-] 	endforeach ()
[+] 	endforeach()
[-] endmacro ()
[+] endmacro()
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ct\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (JNC_DIR ${JANCY_SRC_DIR}/jnc_ext/jnc_rtl/jnc)
[+] set(JNC_DIR ${JANCY_SRC_DIR}/jnc_ext/jnc_rtl/jnc)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_graco_double_step (
[+] add_graco_double_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST}) # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST}) # include "*.jnc.cpp" manually
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] axl_exclude_from_build (${GEN_LLK_CPP_LIST}) # include "*.llk.cpp" manually
[+] axl_exclude_from_build(${GEN_LLK_CPP_LIST}) # include "*.llk.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_dll\CMakeLists.txt
----------------------
[-] set (CMAKE_INSTALL_RPATH)
[+] set(CMAKE_INSTALL_RPATH)
[-] set (CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[+] set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[-] link_directories (
[+] link_directories(
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (jnc_dll.def.in jnc_dll.def)
[+] 	configure_file(jnc_dll.def.in jnc_dll.def)
[-] 	set (
[+] 	set(
[-] else ()
[+] else()
[-] 	set (
[+] 	set(
[-] 	if (CMAKE_GENERATOR MATCHES "Xcode")
[+] 	if(CMAKE_GENERATOR MATCHES "Xcode")
[-] 		set (
[+] 		set(
[-] 	endif ()
[+] 	endif()
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		set (
[+] 		set(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] add_library (
[+] add_library(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		set_property (
[+] 		set_property(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] target_link_llvm_jit_libraries (jnc_dll)
[+] target_link_llvm_jit_libraries(jnc_dll)
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (LINUX)
[+] 	if(LINUX)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\CMakeLists.txt
----------------------
[-] set (CMAKE_INSTALL_RPATH)
[+] set(CMAKE_INSTALL_RPATH)
[-] set (CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[+] set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[-] add_subdirectory (jnc_rtl)
[+] add_subdirectory(jnc_rtl)
[-] add_subdirectory (jnc_std)
[+] add_subdirectory(jnc_std)
[-] add_subdirectory (jnc_sys)
[+] add_subdirectory(jnc_sys)
[-] add_subdirectory (jnc_io_cmn)
[+] add_subdirectory(jnc_io_cmn)
[-] option (
[+] option(
[-] 	"Build jancy base IO (sockets, serial ports, files) extension library "
[+] 	"Build jancy base IO(sockets, serial ports, files) extension library "
[-] if (BUILD_JNC_IO_BASE)
[+] if(BUILD_JNC_IO_BASE)
[-] 	add_subdirectory (jnc_io_base)
[+] 	add_subdirectory(jnc_io_base)
[-] endif ()
[+] endif()
[-] if (LIBSSH2_FOUND)
[+] if(LIBSSH2_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_SSH)
[+] 	if(BUILD_JNC_IO_SSH)
[-] 		add_subdirectory (jnc_io_ssh)
[+] 		add_subdirectory(jnc_io_ssh)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (PCAP_FOUND)
[+] if(PCAP_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_PCAP)
[+] 	if(BUILD_JNC_IO_PCAP)
[-] 		add_subdirectory (jnc_io_pcap)
[+] 		add_subdirectory(jnc_io_pcap)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (LIBUSB_FOUND)
[+] if(LIBUSB_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_USB)
[+] 	if(BUILD_JNC_IO_USB)
[-] 		add_subdirectory (jnc_io_usb)
[+] 		add_subdirectory(jnc_io_usb)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_JNC_IO_DEVMON)
[+] if(BUILD_JNC_IO_DEVMON)
[-] 	add_subdirectory (jnc_io_devmon)
[+] 	add_subdirectory(jnc_io_devmon)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build jancy base IO (sockets, serial ports, files) extension library "
[+] 	"Build jancy base IO(sockets, serial ports, files) extension library "
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_base\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (
[+] 	set(
[-] 	set (
[+] 	set(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (
[+] 	set(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_cmn\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_devmon\CMakeLists.txt
----------------------
[-] if (NOT DEVMON_FOUND)
[+] if(NOT DEVMON_FOUND)
[-] 	set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] 	set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] 	configure_file (
[+] 	configure_file(
[-] 	add_custom_target (
[+] 	add_custom_target(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] 	install (
[+] 	install(
[-] 	return ()
[+] 	return()
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (NOT WIN32 AND NOT LINUX)
[+] if(NOT WIN32 AND NOT LINUX)
[-] 	message (FATAL "jnc_io_devmon is currently Windows/Linux only")
[+] 	message(FATAL "jnc_io_devmon is currently Windows/Linux only")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (LINUX)
[+] elseif(LINUX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] configure_file (
[+] configure_file(
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_pcap\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_ssh\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (_DLL_LIST)
[+] 	set(_DLL_LIST)
[-] 	if (LIBSSH2_DLL_DIR)
[+] 	if(LIBSSH2_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBSSH2_DLL_DIR}/libssh2.dll)
[+] 		list(APPEND _DLL_LIST ${LIBSSH2_DLL_DIR}/libssh2.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (OPENSSL_DLL_DIR)
[+] 	if(OPENSSL_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_usb\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (LINUX)
[+] if(LINUX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] if (WIN32 AND LIBUSB_DLL_DIR)
[+] if(WIN32 AND LIBUSB_DLL_DIR)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_rtl\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_std\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_sys\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_rt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\src\jnc_stdlib\CMakeLists.txt
----------------------
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:43:58 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\test\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc_test_abi)
[+] add_subdirectory(jnc_test_abi)
[-] add_subdirectory (jnc)
[+] add_subdirectory(jnc)
[-] add_subdirectory (ioninja)
[+] add_subdirectory(ioninja)
[-] if (WIN32)
[+] if(WIN32)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_TEST_MFC)
[+] 	if(BUILD_JNC_TEST_MFC)
[-] 		add_subdirectory (jnc_test_mfc)
[+] 		add_subdirectory(jnc_test_mfc)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (QT_FOUND)
[+] if(QT_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_TEST_QT)
[+] 	if(BUILD_JNC_TEST_QT)
[-] 		add_subdirectory (jnc_test_qt)
[+] 		add_subdirectory(jnc_test_qt)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\test\ioninja\CMakeLists.txt
----------------------
[-] if (NOT ${BUILD_JNC_APP})
[+] if(NOT ${BUILD_JNC_APP})
[-] 	return ()
[+] 	return()
[-] endif ()
[+] endif()
[-] add_jancy_tests (
[+] add_jancy_tests(
[-] if (BUILD_JNC_IO_SSH)
[+] if(BUILD_JNC_IO_SSH)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_PCAP)
[+] if(BUILD_JNC_IO_PCAP)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_DEVMON AND DEVMON_FOUND)
[+] if(BUILD_JNC_IO_DEVMON AND DEVMON_FOUND)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] add_jancy_tests (
[+] add_jancy_tests(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\test\jnc\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] if (NOT BUILD_JNC_IO_USB)
[+] if(NOT BUILD_JNC_IO_USB)
[-] 	list (
[+] 	list(
[-] endif ()
[+] endif()
[-] if (WIN32 AND ${LLVM_VERSION} VERSION_LESS 3.5)
[+] if(WIN32 AND ${LLVM_VERSION} VERSION_LESS 3.5)
[-] 	list (
[+] 	list(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] if (${BUILD_JNC_APP})
[+] if(${BUILD_JNC_APP})
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\test\jnc_test_abi\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_test_abi)
[+] 	target_link_llvm_jit_libraries(jnc_test_abi)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\test\jnc_test_mfc\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${PATH_LLVM_INC_DIR})
[+] include_directories(${PATH_LLVM_INC_DIR})
[-] link_directories (${PATH_LLVM_LIB_DIR}/$(Configuation))
[+] link_directories(${PATH_LLVM_LIB_DIR}/$(Configuation))
[-] set (CMAKE_MFC_FLAG 1)
[+] set(CMAKE_MFC_FLAG 1)
[-] add_executable (
[+] add_executable(
[-] llvm_map_components_to_libraries (
[+] llvm_map_components_to_libraries(
[-] target_link_libraries (
[+] target_link_libraries(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10\_CPack_Packages\win32-Source\7Z\jancy-1.8.5-src\test\jnc_test_qt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] set (
[+] set(
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] qt5_wrap_cpp (
[+] qt5_wrap_cpp(
[-] qt5_add_resources (
[+] qt5_add_resources(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] set (
[+] set(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] axl_exclude_from_build (${GEN_QRC_CPP_LIST}) # include "qrc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_QRC_CPP_LIST}) # include "qrc_*.cpp" manually
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (MSVC)
[+] if(MSVC)
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_JNC_IO_USB=1)
[+] 	add_definitions(-D_JNC_IO_USB=1)
[-] endif ()
[+] endif()
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (jnc_test_qt Widgets)
[+] qt5_use_modules(jnc_test_qt Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_test_qt)
[+] 	target_link_llvm_jit_libraries(jnc_test_qt)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		add_qt_rpath_link ()
[+] 		add_qt_rpath_link()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	if (WIN32)
[+] 	if(WIN32)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		if (APPLE)
[+] 		if(APPLE)
[-] 			find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 			find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 			find_library (IOKIT_FRAMEWORK IOKit)
[+] 			find_library(IOKIT_FRAMEWORK IOKit)
[-] 			target_link_libraries (
[+] 			target_link_libraries(
[-] 		endif ()
[+] 		endif()
[-] 		if (LINUX)
[+] 		if(LINUX)
[-] 			target_link_libraries (
[+] 			target_link_libraries(
[-] 		endif ()
[+] 		endif()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\CMakeLists.txt
----------------------
[-] project (jancy)
[+] project(jancy)
[-] cmake_minimum_required (VERSION 3.3)
[+] cmake_minimum_required(VERSION 3.3)
[-] include (cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[+] include(cmake/axl_cmake.cmake NO_POLICY_SCOPE)
[-] set (JANCY_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[+] set(JANCY_ROOT_DIR     ${CMAKE_CURRENT_LIST_DIR})
[-] set (JANCY_SRC_DIR      ${CMAKE_CURRENT_LIST_DIR}/src)
[+] set(JANCY_SRC_DIR      ${CMAKE_CURRENT_LIST_DIR}/src)
[-] set (JANCY_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] set(JANCY_LIB_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] set (JANCY_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] set(JANCY_BIN_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] set (JANCY_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[+] set(JANCY_DOC_DIR      ${CMAKE_CURRENT_BINARY_DIR}/doc)
[-] set (JANCY_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[+] set(JANCY_PACKAGE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/package)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[+] 	set(JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/bin)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[+] 	set(JANCY_DLL_BASE_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
[-] endif ()
[+] endif()
[-] set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JANCY_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JANCY_BIN_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${JANCY_DLL_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${JANCY_DLL_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JANCY_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[+] set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JANCY_LIB_BASE_DIR}/${CONFIGURATION_SCG})
[-] set (JANCY_INSTALL_BIN_SUBDIR bin)
[+] set(JANCY_INSTALL_BIN_SUBDIR bin)
[-] set (JANCY_INSTALL_LIB_SUBDIR lib)
[+] set(JANCY_INSTALL_LIB_SUBDIR lib)
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_INSTALL_INC_SUBDIR     include)
[+] 	set(JANCY_INSTALL_INC_SUBDIR     include)
[-] 	set (JANCY_INSTALL_CMAKE_SUBDIR   cmake)
[+] 	set(JANCY_INSTALL_CMAKE_SUBDIR   cmake)
[-] 	set (JANCY_INSTALL_DLL_SUBDIR     bin)
[+] 	set(JANCY_INSTALL_DLL_SUBDIR     bin)
[-] 	set (JANCY_INSTALL_JNCX_SUBDIR    bin)
[+] 	set(JANCY_INSTALL_JNCX_SUBDIR    bin)
[-] 	set (JANCY_INSTALL_TOOL_SUBDIR    tools)
[+] 	set(JANCY_INSTALL_TOOL_SUBDIR    tools)
[-] 	set (JANCY_INSTALL_SAMPLE_SUBDIR  samples)
[+] 	set(JANCY_INSTALL_SAMPLE_SUBDIR  samples)
[-] 	set (JANCY_INSTALL_SPHINX_SUBDIR  sphinx)
[+] 	set(JANCY_INSTALL_SPHINX_SUBDIR  sphinx)
[-] 	set (JANCY_INSTALL_DOC_SUBDIR     doc)
[+] 	set(JANCY_INSTALL_DOC_SUBDIR     doc)
[-] 	set (JANCY_INSTALL_LICENSE_SUBDIR license)
[+] 	set(JANCY_INSTALL_LICENSE_SUBDIR license)
[-] else ()
[+] else()
[-] 	set (JANCY_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[+] 	set(JANCY_INSTALL_INC_SUBDIR     include/${CMAKE_PROJECT_NAME})
[-] 	set (JANCY_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[+] 	set(JANCY_INSTALL_CMAKE_SUBDIR   lib/cmake/${CMAKE_PROJECT_NAME})
[-] 	set (JANCY_INSTALL_DLL_SUBDIR     lib)
[+] 	set(JANCY_INSTALL_DLL_SUBDIR     lib)
[-] 	set (JANCY_INSTALL_JNCX_SUBDIR    share/${CMAKE_PROJECT_NAME}/extensions)
[+] 	set(JANCY_INSTALL_JNCX_SUBDIR    share/${CMAKE_PROJECT_NAME}/extensions)
[-] 	set (JANCY_INSTALL_TOOL_SUBDIR    share/${CMAKE_PROJECT_NAME}/tools)
[+] 	set(JANCY_INSTALL_TOOL_SUBDIR    share/${CMAKE_PROJECT_NAME}/tools)
[-] 	set (JANCY_INSTALL_SAMPLE_SUBDIR  share/${CMAKE_PROJECT_NAME}/samples)
[+] 	set(JANCY_INSTALL_SAMPLE_SUBDIR  share/${CMAKE_PROJECT_NAME}/samples)
[-] 	set (JANCY_INSTALL_SPHINX_SUBDIR  share/${CMAKE_PROJECT_NAME}/sphinx)
[+] 	set(JANCY_INSTALL_SPHINX_SUBDIR  share/${CMAKE_PROJECT_NAME}/sphinx)
[-] 	set (JANCY_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[+] 	set(JANCY_INSTALL_DOC_SUBDIR     share/${CMAKE_PROJECT_NAME}/doc)
[-] 	set (JANCY_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[+] 	set(JANCY_INSTALL_LICENSE_SUBDIR share/${CMAKE_PROJECT_NAME}/license)
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		set (CMAKE_INSTALL_RPATH "@loader_path/../lib")
[+] 		set(CMAKE_INSTALL_RPATH "@loader_path/../lib")
[-] 	else ()
[+] 	else()
[-] 		set (CMAKE_INSTALL_RPATH "$ORIGIN/../lib")
[+] 		set(CMAKE_INSTALL_RPATH "$ORIGIN/../lib")
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_subdirectory (cmake)
[+] add_subdirectory(cmake)
[-] include (${CMAKE_CURRENT_BINARY_DIR}/cmake/jancy_config.cmake)
[+] include(${CMAKE_CURRENT_BINARY_DIR}/cmake/jancy_config.cmake)
[-] add_subdirectory (src)
[+] add_subdirectory(src)
[-] add_subdirectory (doc)
[+] add_subdirectory(doc)
[-] add_subdirectory (samples)
[+] add_subdirectory(samples)
[-] add_subdirectory (test)
[+] add_subdirectory(test)
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
[-] set (CPACK_PACKAGE_VERSION_MAJOR ${JANCY_VERSION_MAJOR})
[+] set(CPACK_PACKAGE_VERSION_MAJOR ${JANCY_VERSION_MAJOR})
[-] set (CPACK_PACKAGE_VERSION_MINOR ${JANCY_VERSION_MINOR})
[+] set(CPACK_PACKAGE_VERSION_MINOR ${JANCY_VERSION_MINOR})
[-] set (CPACK_PACKAGE_VERSION_PATCH ${JANCY_VERSION_REVISION})
[+] set(CPACK_PACKAGE_VERSION_PATCH ${JANCY_VERSION_REVISION})
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (CPACK_SOURCE_GENERATOR 7Z)
[+] 	set(CPACK_SOURCE_GENERATOR 7Z)
[-] else ()
[+] else()
[-] 	set (CPACK_SOURCE_GENERATOR TXZ)
[+] 	set(CPACK_SOURCE_GENERATOR TXZ)
[-] endif ()
[+] endif()
[-] set (CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[+] set(CPACK_SOURCE_IGNORE_FILES "/[.];[.]user$;/build/;/ci/;/paths.cmake$")
[-] set (CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-src)
[+] set(CPACK_SOURCE_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-src)
[-] if (APPLE)
[+] if(APPLE)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-mac)
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-mac)
[-] else ()
[+] else()
[-] 	string (TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[+] 	string(TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
[-] 	set (CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[+] 	set(CPACK_PACKAGE_FILE_NAME ${CMAKE_PROJECT_NAME}-${JANCY_VERSION_FILE_SUFFIX}-${OS_NAME}-${TARGET_CPU})
[-] endif ()
[+] endif()
[-] include (CPack)
[+] include(CPack)
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\cmake\jancy_config_build.cmake.in
----------------------
[-] set (JANCY_BIN_BASE_DIR  "@JANCY_BIN_BASE_DIR@")
[+] set(JANCY_BIN_BASE_DIR  "@JANCY_BIN_BASE_DIR@")
[-] set (JANCY_BIN_DIR       "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_BIN_DIR       "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_DLL_BASE_DIR  "@JANCY_DLL_BASE_DIR@")
[+] set(JANCY_DLL_BASE_DIR  "@JANCY_DLL_BASE_DIR@")
[-] set (JANCY_DLL_DIR       "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_DLL_DIR       "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_JNCX_BASE_DIR "@JANCY_DLL_BASE_DIR@")
[+] set(JANCY_JNCX_BASE_DIR "@JANCY_DLL_BASE_DIR@")
[-] set (JANCY_JNCX_DIR      "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_JNCX_DIR      "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_INC_DIR       "@JANCY_ROOT_DIR@/include")
[+] set(JANCY_INC_DIR       "@JANCY_ROOT_DIR@/include")
[-] set (JANCY_LIB_BASE_DIR  "@JANCY_LIB_BASE_DIR@")
[+] set(JANCY_LIB_BASE_DIR  "@JANCY_LIB_BASE_DIR@")
[-] set (JANCY_LIB_DIR       "@JANCY_LIB_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_LIB_DIR       "@JANCY_LIB_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_SPHINX_DIR    "@JANCY_ROOT_DIR@/sphinx")
[+] set(JANCY_SPHINX_DIR    "@JANCY_ROOT_DIR@/sphinx")
[-] set (JANCY_EXE           "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}/jancy")
[+] set(JANCY_EXE           "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}/jancy")
[-] set (JNC2CPP_PL          "@JANCY_ROOT_DIR@/tools/jnc2cpp/jnc2cpp.pl")
[+] set(JNC2CPP_PL          "@JANCY_ROOT_DIR@/tools/jnc2cpp/jnc2cpp.pl")
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[+] 	set(JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_NAME jancy)
[+] 	set(JANCY_DLL_NAME jancy)
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] include ("@JANCY_ROOT_DIR@/version.cmake")
[+] include("@JANCY_ROOT_DIR@/version.cmake")
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\cmake\jancy_config_install.cmake.in
----------------------
[-] get_filename_component (JANCY_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@JANCY_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[+] get_filename_component(JANCY_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@JANCY_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[-] set (JANCY_BIN_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_BIN_SUBDIR@")
[+] set(JANCY_BIN_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_BIN_SUBDIR@")
[-] set (JANCY_DLL_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_DLL_SUBDIR@")
[+] set(JANCY_DLL_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_DLL_SUBDIR@")
[-] set (JANCY_JNCX_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_JNCX_SUBDIR@")
[+] set(JANCY_JNCX_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_JNCX_SUBDIR@")
[-] set (JANCY_INC_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_INC_SUBDIR@")
[+] set(JANCY_INC_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_INC_SUBDIR@")
[-] set (JANCY_LIB_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_LIB_SUBDIR@")
[+] set(JANCY_LIB_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_LIB_SUBDIR@")
[-] set (JANCY_CMAKE_DIR  "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_CMAKE_SUBDIR@")
[+] set(JANCY_CMAKE_DIR  "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_CMAKE_SUBDIR@")
[-] set (JANCY_SPHINX_DIR "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_SPHINX_SUBDIR@")
[+] set(JANCY_SPHINX_DIR "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_SPHINX_SUBDIR@")
[-] set (JANCY_TOOL_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_TOOL_SUBDIR@")
[+] set(JANCY_TOOL_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_TOOL_SUBDIR@")
[-] set (JANCY_EXE        "${JANCY_BIN_DIR}/jancy")
[+] set(JANCY_EXE        "${JANCY_BIN_DIR}/jancy")
[-] set (JNC2CPP_PL       "${JANCY_TOOL_DIR}/jnc2cpp/jnc2cpp.pl")
[+] set(JNC2CPP_PL       "${JANCY_TOOL_DIR}/jnc2cpp/jnc2cpp.pl")
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[+] 	set(JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_NAME jancy)
[+] 	set(JANCY_DLL_NAME jancy)
[-] endif ()
[+] endif()
[-] include ("${CMAKE_CURRENT_LIST_DIR}/jancy_version.cmake")
[+] include("${CMAKE_CURRENT_LIST_DIR}/jancy_version.cmake")
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\cmake\CMakeLists.txt
----------------------
[-] include (${JANCY_ROOT_DIR}/version.cmake)
[+] include(${JANCY_ROOT_DIR}/version.cmake)
[-] string (REGEX REPLACE "[a-z]+" ".." JANCY_INSTALL_ROOT_SUBDIR ${JANCY_INSTALL_CMAKE_SUBDIR})
[+] string(REGEX REPLACE "[a-z]+" ".." JANCY_INSTALL_ROOT_SUBDIR ${JANCY_INSTALL_CMAKE_SUBDIR})
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\CMakeLists.txt
----------------------
[-] add_subdirectory (index)
[+] add_subdirectory(index)
[-] add_subdirectory (language)
[+] add_subdirectory(language)
[-] add_subdirectory (extensions)
[+] add_subdirectory(extensions)
[-] add_subdirectory (compiler)
[+] add_subdirectory(compiler)
[-] add_subdirectory (grammar)
[+] add_subdirectory(grammar)
[-] add_subdirectory (build-guide)
[+] add_subdirectory(build-guide)
[-] add_subdirectory (stdlib)
[+] add_subdirectory(stdlib)
[-] add_subdirectory (api)
[+] add_subdirectory(api)
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\api\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy C API Reference")
[+] set(DOC_NAME "Jancy C API Reference")
[-] set (TEX_BASE_NAME jancy-api-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-api-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/api)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/api)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${DOXYGEN_EXE})
[+] set(XMLGEN_EXE ${DOXYGEN_EXE})
[-] set (XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\build-guide\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Build Guide")
[+] set(DOC_NAME "Jancy Build Guide")
[-] set (TEX_BASE_NAME jancy-build-guide-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-build-guide-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/build-guide)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/build-guide)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\compiler\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Compiler Overview")
[+] set(DOC_NAME "Jancy Compiler Overview")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/compiler)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/compiler)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\extensions\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Writing Jancy Extensions")
[+] set(DOC_NAME "Writing Jancy Extensions")
[-] set (TEX_BASE_NAME jancy-extensions-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-extensions-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/extensions)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/extensions)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\grammar\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Grammar Reference")
[+] set(DOC_NAME "Jancy Grammar Reference")
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/grammar)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/grammar)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" GRACO_EXE ${GRACO_EXE})
[+] 	string(REPLACE "$(Configuration)" "%1" GRACO_EXE ${GRACO_EXE})
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\index\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Documentation Index")
[+] set(DOC_NAME "Jancy Documentation Index")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\language\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Language Manual")
[+] set(DOC_NAME "Jancy Language Manual")
[-] set (TEX_BASE_NAME jancy-language-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-language-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/language)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/language)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\doc\stdlib\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Standard Library Reference")
[+] set(DOC_NAME "Jancy Standard Library Reference")
[-] set (TEX_BASE_NAME jancy-stdlib-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-stdlib-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/stdlib)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/stdlib)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (_EXT_DIR ${JANCY_SRC_DIR}/jnc_ext)
[+] set(_EXT_DIR ${JANCY_SRC_DIR}/jnc_ext)
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${JANCY_EXE})
[+] set(XMLGEN_EXE ${JANCY_EXE})
[-] set (XMLGEN_CMD_LINE ${JANCY_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${JANCY_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" XMLGEN_EXE "${XMLGEN_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" XMLGEN_EXE "${XMLGEN_EXE}")
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\samples\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc)
[+] add_subdirectory(jnc)
[-] option (
[+] option(
[-] if (BUILD_JNC_SAMPLE_01_EMBED_C)
[+] if(BUILD_JNC_SAMPLE_01_EMBED_C)
[-] 	add_subdirectory (jnc_sample_01_embed_c)
[+] 	add_subdirectory(jnc_sample_01_embed_c)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_JNC_SAMPLE_02_EMBED_CPP)
[+] if(BUILD_JNC_SAMPLE_02_EMBED_CPP)
[-] 	add_subdirectory (jnc_sample_02_embed_cpp)
[+] 	add_subdirectory(jnc_sample_02_embed_cpp)
[-] endif ()
[+] endif()
[-] if (${QT_FOUND})
[+] if(${QT_FOUND})
[-] 	option (
[+] 	option(
[-] 		"Build sample jnc_sample_03_dialog (QT bindings)"
[+] 		"Build sample jnc_sample_03_dialog(QT bindings)"
[-] 	if (BUILD_JNC_SAMPLE_03_DIALOG)
[+] 	if(BUILD_JNC_SAMPLE_03_DIALOG)
[-] 		add_subdirectory (jnc_sample_03_dialog)
[+] 		add_subdirectory(jnc_sample_03_dialog)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\samples\jnc\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] if (${BUILD_JNC_APP})
[+] if(${BUILD_JNC_APP})
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\samples\jnc_sample_01_embed_c\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H pch.h)
[+] set(PCH_H pch.h)
[-] set (PCH_C pch.c)
[+] set(PCH_C pch.c)
[-] source_group (
[+] source_group(
[-] include_directories (${JANCY_INC_DIR})
[+] include_directories(${JANCY_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_01_embed_c)
[+] 	target_link_llvm_jit_libraries(jnc_sample_01_embed_c)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\samples\jnc_sample_02_embed_cpp\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${JANCY_INC_DIR})
[+] include_directories(${JANCY_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_02_embed_cpp)
[+] 	target_link_llvm_jit_libraries(jnc_sample_02_embed_cpp)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\samples\jnc_sample_03_dialog\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] set (
[+] set(
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] qt5_wrap_cpp (
[+] qt5_wrap_cpp(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (MSVC)
[+] if(MSVC)
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (jnc_sample_03_dialog Widgets)
[+] qt5_use_modules(jnc_sample_03_dialog Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_03_dialog)
[+] 	target_link_llvm_jit_libraries(jnc_sample_03_dialog)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		add_qt_rpath_link ()
[+] 		add_qt_rpath_link()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
[-] axl_detect_host_cpu (_CPU)
[+] axl_detect_host_cpu(_CPU)
[-] if (WIN32 OR (LINUX AND "${TARGET_CPU}" STREQUAL "${_CPU}"))
[+] if(WIN32 OR(LINUX AND "${TARGET_CPU}" STREQUAL "${_CPU}"))
[-] 	add_test (
[+] 	add_test(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc_ct)
[+] add_subdirectory(jnc_ct)
[-] add_subdirectory (jnc_rt)
[+] add_subdirectory(jnc_rt)
[-] add_subdirectory (jnc_ext) # ext BEFORE everything api, app & dll (we need BUILD_JNC_IO_USB)
[+] add_subdirectory(jnc_ext) # ext BEFORE everything api, app & dll (we need BUILD_JNC_IO_USB)
[-] add_subdirectory (jnc_api)
[+] add_subdirectory(jnc_api)
[-] option (
[+] option(
[-] option (
[+] option(
[-] option (
[+] option(
[-] 	"Build jnc_stdlib.jncx (for IDE)"
[+] 	"Build jnc_stdlib.jncx(for IDE)"
[-] if (BUILD_JNC_APP)
[+] if(BUILD_JNC_APP)
[-] 	add_subdirectory (jnc_app)
[+] 	add_subdirectory(jnc_app)
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	set (JNC_LIBRARY_OBJECT OBJECT)
[+] 	set(JNC_LIBRARY_OBJECT OBJECT)
[-] 	add_subdirectory (jnc_dll)
[+] 	add_subdirectory(jnc_dll)
[-] else ()
[+] else()
[-] 	set (JNC_LIBRARY_OBJECT)
[+] 	set(JNC_LIBRARY_OBJECT)
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_STDLIB)
[+] if(BUILD_JNC_STDLIB)
[-] 	add_subdirectory (jnc_stdlib)
[+] 	add_subdirectory(jnc_stdlib)
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_api\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H            pch.h)
[+] set(PCH_H            pch.h)
[-] set (PCH_STATIC_CPP   pch_static.cpp)
[+] set(PCH_STATIC_CPP   pch_static.cpp)
[-] set (PCH_STATIC_O_CPP pch_static_o.cpp)
[+] set(PCH_STATIC_O_CPP pch_static_o.cpp)
[-] set (PCH_DYNAMIC_CPP  pch_dynamic.cpp)
[+] set(PCH_DYNAMIC_CPP  pch_dynamic.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	add_definitions (-D_JNC_IO_USB=1)
[+] 	add_definitions(-D_JNC_IO_USB=1)
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_app\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_app)
[+] 	target_link_llvm_jit_libraries(jnc_app)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] install (
[+] install(
[-] macro (
[+] macro(
[-] 	set (_FLAGS "--print-retval --import-dir ${JANCY_DLL_BASE_DIR}/$<CONFIGURATION> ${JANCY_TEST_OPT_LEVEL}")
[+] 	set(_FLAGS "--print-retval --import-dir ${JANCY_DLL_BASE_DIR}/$<CONFIGURATION> ${JANCY_TEST_OPT_LEVEL}")
[-] 	if (UNIX)
[+] 	if(UNIX)
[-] 		set (_FLAGS "${_FLAGS} --debug-info")
[+] 		set(_FLAGS "${_FLAGS} --debug-info")
[-] 	endif ()
[+] 	endif()
[-] 	string (REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[+] 	string(REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[-] 	set (_ARG_LIST ${ARGN})
[+] 	set(_ARG_LIST ${ARGN})
[-] 	set (_DIR)
[+] 	set(_DIR)
[-] 	set (_PREFIX)
[+] 	set(_PREFIX)
[-] 	set (_FILE_LIST)
[+] 	set(_FILE_LIST)
[-] 	set (_FIRST_FILE)
[+] 	set(_FIRST_FILE)
[-] 	set (_IS_DIR FALSE)
[+] 	set(_IS_DIR FALSE)
[-] 	set (_IS_PREFIX FALSE)
[+] 	set(_IS_PREFIX FALSE)
[-] 	set (_IS_FLAGS FALSE)
[+] 	set(_IS_FLAGS FALSE)
[-] 	set (_IS_FILE_LIST FALSE)
[+] 	set(_IS_FILE_LIST FALSE)
[-] 	foreach (_ARG ${_ARG_LIST})
[+] 	foreach(_ARG ${_ARG_LIST})
[-] 		if (_IS_DIR)
[+] 		if(_IS_DIR)
[-] 			set (_DIR ${_ARG})
[+] 			set(_DIR ${_ARG})
[-] 			set (_IS_DIR FALSE)
[+] 			set(_IS_DIR FALSE)
[-] 		elseif (_IS_PREFIX)
[+] 		elseif(_IS_PREFIX)
[-] 			set (_PREFIX ${_ARG})
[+] 			set(_PREFIX ${_ARG})
[-] 			set (_IS_PREFIX FALSE)
[+] 			set(_IS_PREFIX FALSE)
[-] 		elseif (_IS_FLAGS)
[+] 		elseif(_IS_FLAGS)
[-] 			set (_FLAGS "${_FLAGS} ${_ARG}")
[+] 			set(_FLAGS "${_FLAGS} ${_ARG}")
[-] 			set (_IS_FLAGS FALSE)
[+] 			set(_IS_FLAGS FALSE)
[-] 			string (REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[+] 			string(REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[-] 		elseif ("${_ARG}" STREQUAL "WORKING_DIRECTORY")
[+] 		elseif("${_ARG}" STREQUAL "WORKING_DIRECTORY")
[-] 			set (_IS_DIR TRUE)
[+] 			set(_IS_DIR TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "NAME_PREFIX")
[+] 		elseif("${_ARG}" STREQUAL "NAME_PREFIX")
[-] 			set (_IS_PREFIX TRUE)
[+] 			set(_IS_PREFIX TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "FLAGS")
[+] 		elseif("${_ARG}" STREQUAL "FLAGS")
[-] 			set (_IS_FLAGS TRUE)
[+] 			set(_IS_FLAGS TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "BEGIN_FILE_LIST")
[+] 		elseif("${_ARG}" STREQUAL "BEGIN_FILE_LIST")
[-] 			set (_IS_FILE_LIST TRUE)
[+] 			set(_IS_FILE_LIST TRUE)
[-] 			set (_FILE_LIST)
[+] 			set(_FILE_LIST)
[-] 		elseif (_IS_FILE_LIST AND NOT "${_ARG}" STREQUAL "END_FILE_LIST")
[+] 		elseif(_IS_FILE_LIST AND NOT "${_ARG}" STREQUAL "END_FILE_LIST")
[-] 			if ("${_FILE_LIST}" STREQUAL "")
[+] 			if("${_FILE_LIST}" STREQUAL "")
[-] 				set (_FIRST_FILE ${_ARG})
[+] 				set(_FIRST_FILE ${_ARG})
[-] 			endif ()
[+] 			endif()
[-] 			list (APPEND _FILE_LIST ${_ARG})
[+] 			list(APPEND _FILE_LIST ${_ARG})
[-] 		else ()
[+] 		else()
[-] 			if (_IS_FILE_LIST)
[+] 			if(_IS_FILE_LIST)
[-] 				set (_IS_FILE_LIST FALSE)
[+] 				set(_IS_FILE_LIST FALSE)
[-] 			else ()
[+] 			else()
[-] 				set (_FIRST_FILE ${_ARG})
[+] 				set(_FIRST_FILE ${_ARG})
[-] 				set (_FILE_LIST ${_ARG})
[+] 				set(_FILE_LIST ${_ARG})
[-] 			endif ()
[+] 			endif()
[-] 			if ("${_DIR}" STREQUAL "")
[+] 			if("${_DIR}" STREQUAL "")
[-] 				add_test (
[+] 				add_test(
[-] 			else ()
[+] 			else()
[-] 				add_test (
[+] 				add_test(
[-] 			endif ()
[+] 			endif()
[-] 		endif ()
[+] 		endif()
[-] 	endforeach ()
[+] 	endforeach()
[-] endmacro ()
[+] endmacro()
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ct\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (JNC_DIR ${JANCY_SRC_DIR}/jnc_ext/jnc_rtl/jnc)
[+] set(JNC_DIR ${JANCY_SRC_DIR}/jnc_ext/jnc_rtl/jnc)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_graco_double_step (
[+] add_graco_double_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST}) # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST}) # include "*.jnc.cpp" manually
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] axl_exclude_from_build (${GEN_LLK_CPP_LIST}) # include "*.llk.cpp" manually
[+] axl_exclude_from_build(${GEN_LLK_CPP_LIST}) # include "*.llk.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_dll\CMakeLists.txt
----------------------
[-] set (CMAKE_INSTALL_RPATH)
[+] set(CMAKE_INSTALL_RPATH)
[-] set (CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[+] set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[-] link_directories (
[+] link_directories(
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (jnc_dll.def.in jnc_dll.def)
[+] 	configure_file(jnc_dll.def.in jnc_dll.def)
[-] 	set (
[+] 	set(
[-] else ()
[+] else()
[-] 	set (
[+] 	set(
[-] 	if (CMAKE_GENERATOR MATCHES "Xcode")
[+] 	if(CMAKE_GENERATOR MATCHES "Xcode")
[-] 		set (
[+] 		set(
[-] 	endif ()
[+] 	endif()
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		set (
[+] 		set(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] add_library (
[+] add_library(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		set_property (
[+] 		set_property(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] target_link_llvm_jit_libraries (jnc_dll)
[+] target_link_llvm_jit_libraries(jnc_dll)
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (LINUX)
[+] 	if(LINUX)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:43:59 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\CMakeLists.txt
----------------------
[-] set (CMAKE_INSTALL_RPATH)
[+] set(CMAKE_INSTALL_RPATH)
[-] set (CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[+] set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[-] add_subdirectory (jnc_rtl)
[+] add_subdirectory(jnc_rtl)
[-] add_subdirectory (jnc_std)
[+] add_subdirectory(jnc_std)
[-] add_subdirectory (jnc_sys)
[+] add_subdirectory(jnc_sys)
[-] add_subdirectory (jnc_io_cmn)
[+] add_subdirectory(jnc_io_cmn)
[-] option (
[+] option(
[-] 	"Build jancy base IO (sockets, serial ports, files) extension library "
[+] 	"Build jancy base IO(sockets, serial ports, files) extension library "
[-] if (BUILD_JNC_IO_BASE)
[+] if(BUILD_JNC_IO_BASE)
[-] 	add_subdirectory (jnc_io_base)
[+] 	add_subdirectory(jnc_io_base)
[-] endif ()
[+] endif()
[-] if (LIBSSH2_FOUND)
[+] if(LIBSSH2_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_SSH)
[+] 	if(BUILD_JNC_IO_SSH)
[-] 		add_subdirectory (jnc_io_ssh)
[+] 		add_subdirectory(jnc_io_ssh)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (PCAP_FOUND)
[+] if(PCAP_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_PCAP)
[+] 	if(BUILD_JNC_IO_PCAP)
[-] 		add_subdirectory (jnc_io_pcap)
[+] 		add_subdirectory(jnc_io_pcap)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (LIBUSB_FOUND)
[+] if(LIBUSB_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_USB)
[+] 	if(BUILD_JNC_IO_USB)
[-] 		add_subdirectory (jnc_io_usb)
[+] 		add_subdirectory(jnc_io_usb)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_JNC_IO_DEVMON)
[+] if(BUILD_JNC_IO_DEVMON)
[-] 	add_subdirectory (jnc_io_devmon)
[+] 	add_subdirectory(jnc_io_devmon)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build jancy base IO (sockets, serial ports, files) extension library "
[+] 	"Build jancy base IO(sockets, serial ports, files) extension library "
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_base\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (
[+] 	set(
[-] 	set (
[+] 	set(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (
[+] 	set(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_cmn\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_devmon\CMakeLists.txt
----------------------
[-] if (NOT DEVMON_FOUND)
[+] if(NOT DEVMON_FOUND)
[-] 	set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] 	set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] 	configure_file (
[+] 	configure_file(
[-] 	add_custom_target (
[+] 	add_custom_target(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] 	install (
[+] 	install(
[-] 	return ()
[+] 	return()
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (NOT WIN32 AND NOT LINUX)
[+] if(NOT WIN32 AND NOT LINUX)
[-] 	message (FATAL "jnc_io_devmon is currently Windows/Linux only")
[+] 	message(FATAL "jnc_io_devmon is currently Windows/Linux only")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (LINUX)
[+] elseif(LINUX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] configure_file (
[+] configure_file(
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_pcap\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_ssh\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (_DLL_LIST)
[+] 	set(_DLL_LIST)
[-] 	if (LIBSSH2_DLL_DIR)
[+] 	if(LIBSSH2_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBSSH2_DLL_DIR}/libssh2.dll)
[+] 		list(APPEND _DLL_LIST ${LIBSSH2_DLL_DIR}/libssh2.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (OPENSSL_DLL_DIR)
[+] 	if(OPENSSL_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_io_usb\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (LINUX)
[+] if(LINUX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] if (WIN32 AND LIBUSB_DLL_DIR)
[+] if(WIN32 AND LIBUSB_DLL_DIR)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_rtl\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_std\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_ext\jnc_sys\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_rt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\src\jnc_stdlib\CMakeLists.txt
----------------------
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\test\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc_test_abi)
[+] add_subdirectory(jnc_test_abi)
[-] add_subdirectory (jnc)
[+] add_subdirectory(jnc)
[-] add_subdirectory (ioninja)
[+] add_subdirectory(ioninja)
[-] if (WIN32)
[+] if(WIN32)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_TEST_MFC)
[+] 	if(BUILD_JNC_TEST_MFC)
[-] 		add_subdirectory (jnc_test_mfc)
[+] 		add_subdirectory(jnc_test_mfc)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (QT_FOUND)
[+] if(QT_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_TEST_QT)
[+] 	if(BUILD_JNC_TEST_QT)
[-] 		add_subdirectory (jnc_test_qt)
[+] 		add_subdirectory(jnc_test_qt)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\test\ioninja\CMakeLists.txt
----------------------
[-] if (NOT ${BUILD_JNC_APP})
[+] if(NOT ${BUILD_JNC_APP})
[-] 	return ()
[+] 	return()
[-] endif ()
[+] endif()
[-] add_jancy_tests (
[+] add_jancy_tests(
[-] if (BUILD_JNC_IO_SSH)
[+] if(BUILD_JNC_IO_SSH)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_PCAP)
[+] if(BUILD_JNC_IO_PCAP)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_DEVMON AND DEVMON_FOUND)
[+] if(BUILD_JNC_IO_DEVMON AND DEVMON_FOUND)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] add_jancy_tests (
[+] add_jancy_tests(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\test\jnc\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] if (NOT BUILD_JNC_IO_USB)
[+] if(NOT BUILD_JNC_IO_USB)
[-] 	list (
[+] 	list(
[-] endif ()
[+] endif()
[-] if (WIN32 AND ${LLVM_VERSION} VERSION_LESS 3.5)
[+] if(WIN32 AND ${LLVM_VERSION} VERSION_LESS 3.5)
[-] 	list (
[+] 	list(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] if (${BUILD_JNC_APP})
[+] if(${BUILD_JNC_APP})
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\test\jnc_test_abi\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_test_abi)
[+] 	target_link_llvm_jit_libraries(jnc_test_abi)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\test\jnc_test_mfc\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${PATH_LLVM_INC_DIR})
[+] include_directories(${PATH_LLVM_INC_DIR})
[-] link_directories (${PATH_LLVM_LIB_DIR}/$(Configuation))
[+] link_directories(${PATH_LLVM_LIB_DIR}/$(Configuation))
[-] set (CMAKE_MFC_FLAG 1)
[+] set(CMAKE_MFC_FLAG 1)
[-] add_executable (
[+] add_executable(
[-] llvm_map_components_to_libraries (
[+] llvm_map_components_to_libraries(
[-] target_link_libraries (
[+] target_link_libraries(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\build\msvc10-amd64\_CPack_Packages\win64-Source\7Z\jancy-1.8.5-src\test\jnc_test_qt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] set (
[+] set(
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] qt5_wrap_cpp (
[+] qt5_wrap_cpp(
[-] qt5_add_resources (
[+] qt5_add_resources(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] set (
[+] set(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] axl_exclude_from_build (${GEN_QRC_CPP_LIST}) # include "qrc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_QRC_CPP_LIST}) # include "qrc_*.cpp" manually
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (MSVC)
[+] if(MSVC)
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_JNC_IO_USB=1)
[+] 	add_definitions(-D_JNC_IO_USB=1)
[-] endif ()
[+] endif()
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (jnc_test_qt Widgets)
[+] qt5_use_modules(jnc_test_qt Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_test_qt)
[+] 	target_link_llvm_jit_libraries(jnc_test_qt)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		add_qt_rpath_link ()
[+] 		add_qt_rpath_link()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	if (WIN32)
[+] 	if(WIN32)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		if (APPLE)
[+] 		if(APPLE)
[-] 			find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 			find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 			find_library (IOKIT_FRAMEWORK IOKit)
[+] 			find_library(IOKIT_FRAMEWORK IOKit)
[-] 			target_link_libraries (
[+] 			target_link_libraries(
[-] 		endif ()
[+] 		endif()
[-] 		if (LINUX)
[+] 		if(LINUX)
[-] 			target_link_libraries (
[+] 			target_link_libraries(
[-] 		endif ()
[+] 		endif()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\cmake\jancy_config_build.cmake.in
----------------------
[-] set (JANCY_BIN_BASE_DIR  "@JANCY_BIN_BASE_DIR@")
[+] set(JANCY_BIN_BASE_DIR  "@JANCY_BIN_BASE_DIR@")
[-] set (JANCY_BIN_DIR       "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_BIN_DIR       "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_DLL_BASE_DIR  "@JANCY_DLL_BASE_DIR@")
[+] set(JANCY_DLL_BASE_DIR  "@JANCY_DLL_BASE_DIR@")
[-] set (JANCY_DLL_DIR       "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_DLL_DIR       "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_JNCX_BASE_DIR "@JANCY_DLL_BASE_DIR@")
[+] set(JANCY_JNCX_BASE_DIR "@JANCY_DLL_BASE_DIR@")
[-] set (JANCY_JNCX_DIR      "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_JNCX_DIR      "@JANCY_DLL_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_INC_DIR       "@JANCY_ROOT_DIR@/include")
[+] set(JANCY_INC_DIR       "@JANCY_ROOT_DIR@/include")
[-] set (JANCY_LIB_BASE_DIR  "@JANCY_LIB_BASE_DIR@")
[+] set(JANCY_LIB_BASE_DIR  "@JANCY_LIB_BASE_DIR@")
[-] set (JANCY_LIB_DIR       "@JANCY_LIB_BASE_DIR@/${CONFIGURATION}")
[+] set(JANCY_LIB_DIR       "@JANCY_LIB_BASE_DIR@/${CONFIGURATION}")
[-] set (JANCY_SPHINX_DIR    "@JANCY_ROOT_DIR@/sphinx")
[+] set(JANCY_SPHINX_DIR    "@JANCY_ROOT_DIR@/sphinx")
[-] set (JANCY_EXE           "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}/jancy")
[+] set(JANCY_EXE           "@JANCY_BIN_BASE_DIR@/${CONFIGURATION}/jancy")
[-] set (JNC2CPP_PL          "@JANCY_ROOT_DIR@/tools/jnc2cpp/jnc2cpp.pl")
[+] set(JNC2CPP_PL          "@JANCY_ROOT_DIR@/tools/jnc2cpp/jnc2cpp.pl")
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[+] 	set(JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_NAME jancy)
[+] 	set(JANCY_DLL_NAME jancy)
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] include ("@JANCY_ROOT_DIR@/version.cmake")
[+] include("@JANCY_ROOT_DIR@/version.cmake")
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\cmake\jancy_config_install.cmake.in
----------------------
[-] get_filename_component (JANCY_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@JANCY_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[+] get_filename_component(JANCY_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/@JANCY_INSTALL_ROOT_SUBDIR@" ABSOLUTE)
[-] set (JANCY_BIN_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_BIN_SUBDIR@")
[+] set(JANCY_BIN_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_BIN_SUBDIR@")
[-] set (JANCY_DLL_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_DLL_SUBDIR@")
[+] set(JANCY_DLL_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_DLL_SUBDIR@")
[-] set (JANCY_JNCX_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_JNCX_SUBDIR@")
[+] set(JANCY_JNCX_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_JNCX_SUBDIR@")
[-] set (JANCY_INC_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_INC_SUBDIR@")
[+] set(JANCY_INC_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_INC_SUBDIR@")
[-] set (JANCY_LIB_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_LIB_SUBDIR@")
[+] set(JANCY_LIB_DIR    "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_LIB_SUBDIR@")
[-] set (JANCY_CMAKE_DIR  "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_CMAKE_SUBDIR@")
[+] set(JANCY_CMAKE_DIR  "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_CMAKE_SUBDIR@")
[-] set (JANCY_SPHINX_DIR "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_SPHINX_SUBDIR@")
[+] set(JANCY_SPHINX_DIR "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_SPHINX_SUBDIR@")
[-] set (JANCY_TOOL_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_TOOL_SUBDIR@")
[+] set(JANCY_TOOL_DIR   "${JANCY_INSTALL_PREFIX}/@JANCY_INSTALL_TOOL_SUBDIR@")
[-] set (JANCY_EXE        "${JANCY_BIN_DIR}/jancy")
[+] set(JANCY_EXE        "${JANCY_BIN_DIR}/jancy")
[-] set (JNC2CPP_PL       "${JANCY_TOOL_DIR}/jnc2cpp/jnc2cpp.pl")
[+] set(JNC2CPP_PL       "${JANCY_TOOL_DIR}/jnc2cpp/jnc2cpp.pl")
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[+] 	set(JANCY_DLL_NAME jancy-@JANCY_VERSION_MAJOR@.@JANCY_VERSION_MINOR@)
[-] else ()
[+] else()
[-] 	set (JANCY_DLL_NAME jancy)
[+] 	set(JANCY_DLL_NAME jancy)
[-] endif ()
[+] endif()
[-] include ("${CMAKE_CURRENT_LIST_DIR}/jancy_version.cmake")
[+] include("${CMAKE_CURRENT_LIST_DIR}/jancy_version.cmake")
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\cmake\CMakeLists.txt
----------------------
[-] include (${JANCY_ROOT_DIR}/version.cmake)
[+] include(${JANCY_ROOT_DIR}/version.cmake)
[-] string (REGEX REPLACE "[a-z]+" ".." JANCY_INSTALL_ROOT_SUBDIR ${JANCY_INSTALL_CMAKE_SUBDIR})
[+] string(REGEX REPLACE "[a-z]+" ".." JANCY_INSTALL_ROOT_SUBDIR ${JANCY_INSTALL_CMAKE_SUBDIR})
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] install (
[+] install(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\CMakeLists.txt
----------------------
[-] add_subdirectory (index)
[+] add_subdirectory(index)
[-] add_subdirectory (language)
[+] add_subdirectory(language)
[-] add_subdirectory (extensions)
[+] add_subdirectory(extensions)
[-] add_subdirectory (compiler)
[+] add_subdirectory(compiler)
[-] add_subdirectory (grammar)
[+] add_subdirectory(grammar)
[-] add_subdirectory (build-guide)
[+] add_subdirectory(build-guide)
[-] add_subdirectory (stdlib)
[+] add_subdirectory(stdlib)
[-] add_subdirectory (api)
[+] add_subdirectory(api)
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\api\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy C API Reference")
[+] set(DOC_NAME "Jancy C API Reference")
[-] set (TEX_BASE_NAME jancy-api-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-api-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/api)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/api)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${DOXYGEN_EXE})
[+] set(XMLGEN_EXE ${DOXYGEN_EXE})
[-] set (XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${DOXYGEN_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\build-guide\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Build Guide")
[+] set(DOC_NAME "Jancy Build Guide")
[-] set (TEX_BASE_NAME jancy-build-guide-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-build-guide-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/build-guide)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/build-guide)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\compiler\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Compiler Overview")
[+] set(DOC_NAME "Jancy Compiler Overview")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/compiler)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/compiler)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\extensions\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Writing Jancy Extensions")
[+] set(DOC_NAME "Writing Jancy Extensions")
[-] set (TEX_BASE_NAME jancy-extensions-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-extensions-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/extensions)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/extensions)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\grammar\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Grammar Reference")
[+] set(DOC_NAME "Jancy Grammar Reference")
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/grammar)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/grammar)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" GRACO_EXE ${GRACO_EXE})
[+] 	string(REPLACE "$(Configuration)" "%1" GRACO_EXE ${GRACO_EXE})
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\index\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Documentation Index")
[+] set(DOC_NAME "Jancy Documentation Index")
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR})
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] string (
[+] string(
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\language\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Language Manual")
[+] set(DOC_NAME "Jancy Language Manual")
[-] set (TEX_BASE_NAME jancy-language-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-language-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/language)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/language)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\doc\stdlib\CMakeLists.txt
----------------------
[-] set (DOC_NAME "Jancy Standard Library Reference")
[+] set(DOC_NAME "Jancy Standard Library Reference")
[-] set (TEX_BASE_NAME jancy-stdlib-${JANCY_VERSION_FILE_SUFFIX})
[+] set(TEX_BASE_NAME jancy-stdlib-${JANCY_VERSION_FILE_SUFFIX})
[-] set (TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[+] set(TEX_FILE_NAME ${TEX_BASE_NAME}.tex)
[-] set (PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[+] set(PDF_FILE_NAME ${TEX_BASE_NAME}.pdf)
[-] set (STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[+] set(STATIC_RST_DIR ${CMAKE_CURRENT_LIST_DIR}/rst)
[-] set (XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[+] set(XML_DIR  ${CMAKE_CURRENT_BINARY_DIR}/xml)
[-] set (RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[+] set(RST_DIR  ${CMAKE_CURRENT_BINARY_DIR}/rst)
[-] set (TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[+] set(TEX_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tex)
[-] set (TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[+] set(TMP_DIR  ${CMAKE_CURRENT_BINARY_DIR}/tmp)
[-] set (HTML_DIR ${JANCY_DOC_DIR}/html/stdlib)
[+] set(HTML_DIR ${JANCY_DOC_DIR}/html/stdlib)
[-] set (PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[+] set(PDF_DIR  ${JANCY_DOC_DIR}/pdf)
[-] set (SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[+] set(SPHINX_HTML_THEME ${AXL_SPHINX_HTML_THEME})
[-] set (_EXT_DIR ${JANCY_SRC_DIR}/jnc_ext)
[+] set(_EXT_DIR ${JANCY_SRC_DIR}/jnc_ext)
[-] set (
[+] set(
[-] set (XMLGEN_EXE ${JANCY_EXE})
[+] set(XMLGEN_EXE ${JANCY_EXE})
[-] set (XMLGEN_CMD_LINE ${JANCY_CMD_LINE})
[+] set(XMLGEN_CMD_LINE ${JANCY_CMD_LINE})
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] foreach (_VAR ${CMD_LINE_VAR_LIST})
[+] foreach(_VAR ${CMD_LINE_VAR_LIST})
[-] 	string (
[+] 	string(
[-] endforeach ()
[+] endforeach()
[-] configure_file (
[+] configure_file(
[-] if (WIN32)
[+] if(WIN32)
[-] 	string (REPLACE "$(Configuration)" "%1" XMLGEN_EXE "${XMLGEN_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" XMLGEN_EXE "${XMLGEN_EXE}")
[-] 	string (REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[+] 	string(REPLACE "$(Configuration)" "%1" DOXYREST_EXE "${DOXYREST_EXE}")
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] 	configure_file (
[+] 	configure_file(
[-] else ()
[+] else()
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] 	axl_configure_file_w_permissions (
[+] 	axl_configure_file_w_permissions(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\samples\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc)
[+] add_subdirectory(jnc)
[-] option (
[+] option(
[-] if (BUILD_JNC_SAMPLE_01_EMBED_C)
[+] if(BUILD_JNC_SAMPLE_01_EMBED_C)
[-] 	add_subdirectory (jnc_sample_01_embed_c)
[+] 	add_subdirectory(jnc_sample_01_embed_c)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_JNC_SAMPLE_02_EMBED_CPP)
[+] if(BUILD_JNC_SAMPLE_02_EMBED_CPP)
[-] 	add_subdirectory (jnc_sample_02_embed_cpp)
[+] 	add_subdirectory(jnc_sample_02_embed_cpp)
[-] endif ()
[+] endif()
[-] if (${QT_FOUND})
[+] if(${QT_FOUND})
[-] 	option (
[+] 	option(
[-] 		"Build sample jnc_sample_03_dialog (QT bindings)"
[+] 		"Build sample jnc_sample_03_dialog(QT bindings)"
[-] 	if (BUILD_JNC_SAMPLE_03_DIALOG)
[+] 	if(BUILD_JNC_SAMPLE_03_DIALOG)
[-] 		add_subdirectory (jnc_sample_03_dialog)
[+] 		add_subdirectory(jnc_sample_03_dialog)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\samples\jnc\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] if (${BUILD_JNC_APP})
[+] if(${BUILD_JNC_APP})
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:00 - C:\Projects\repos\ioninja\jancy\samples\jnc_sample_01_embed_c\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H pch.h)
[+] set(PCH_H pch.h)
[-] set (PCH_C pch.c)
[+] set(PCH_C pch.c)
[-] source_group (
[+] source_group(
[-] include_directories (${JANCY_INC_DIR})
[+] include_directories(${JANCY_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_01_embed_c)
[+] 	target_link_llvm_jit_libraries(jnc_sample_01_embed_c)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\samples\jnc_sample_02_embed_cpp\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${JANCY_INC_DIR})
[+] include_directories(${JANCY_INC_DIR})
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_02_embed_cpp)
[+] 	target_link_llvm_jit_libraries(jnc_sample_02_embed_cpp)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\samples\jnc_sample_03_dialog\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] set (
[+] set(
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] qt5_wrap_cpp (
[+] qt5_wrap_cpp(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (MSVC)
[+] if(MSVC)
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (jnc_sample_03_dialog Widgets)
[+] qt5_use_modules(jnc_sample_03_dialog Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_sample_03_dialog)
[+] 	target_link_llvm_jit_libraries(jnc_sample_03_dialog)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		add_qt_rpath_link ()
[+] 		add_qt_rpath_link()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
[-] axl_detect_host_cpu (_CPU)
[+] axl_detect_host_cpu(_CPU)
[-] if (WIN32 OR (LINUX AND "${TARGET_CPU}" STREQUAL "${_CPU}"))
[+] if(WIN32 OR(LINUX AND "${TARGET_CPU}" STREQUAL "${_CPU}"))
[-] 	add_test (
[+] 	add_test(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc_ct)
[+] add_subdirectory(jnc_ct)
[-] add_subdirectory (jnc_rt)
[+] add_subdirectory(jnc_rt)
[-] add_subdirectory (jnc_ext) # ext BEFORE everything api, app & dll (we need BUILD_JNC_IO_USB)
[+] add_subdirectory(jnc_ext) # ext BEFORE everything api, app & dll (we need BUILD_JNC_IO_USB)
[-] add_subdirectory (jnc_api)
[+] add_subdirectory(jnc_api)
[-] option (
[+] option(
[-] option (
[+] option(
[-] option (
[+] option(
[-] 	"Build jnc_stdlib.jncx (for IDE)"
[+] 	"Build jnc_stdlib.jncx(for IDE)"
[-] if (BUILD_JNC_APP)
[+] if(BUILD_JNC_APP)
[-] 	add_subdirectory (jnc_app)
[+] 	add_subdirectory(jnc_app)
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	set (JNC_LIBRARY_OBJECT OBJECT)
[+] 	set(JNC_LIBRARY_OBJECT OBJECT)
[-] 	add_subdirectory (jnc_dll)
[+] 	add_subdirectory(jnc_dll)
[-] else ()
[+] else()
[-] 	set (JNC_LIBRARY_OBJECT)
[+] 	set(JNC_LIBRARY_OBJECT)
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_STDLIB)
[+] if(BUILD_JNC_STDLIB)
[-] 	add_subdirectory (jnc_stdlib)
[+] 	add_subdirectory(jnc_stdlib)
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_api\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H            pch.h)
[+] set(PCH_H            pch.h)
[-] set (PCH_STATIC_CPP   pch_static.cpp)
[+] set(PCH_STATIC_CPP   pch_static.cpp)
[-] set (PCH_STATIC_O_CPP pch_static_o.cpp)
[+] set(PCH_STATIC_O_CPP pch_static_o.cpp)
[-] set (PCH_DYNAMIC_CPP  pch_dynamic.cpp)
[+] set(PCH_DYNAMIC_CPP  pch_dynamic.cpp)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	add_definitions (-D_JNC_IO_USB=1)
[+] 	add_definitions(-D_JNC_IO_USB=1)
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] endif ()
[+] endif()
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_app\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] configure_file (
[+] configure_file(
[-] set (
[+] set(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_app)
[+] 	target_link_llvm_jit_libraries(jnc_app)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] install (
[+] install(
[-] macro (
[+] macro(
[-] 	set (_FLAGS "--print-retval --import-dir ${JANCY_DLL_BASE_DIR}/$<CONFIGURATION> ${JANCY_TEST_OPT_LEVEL}")
[+] 	set(_FLAGS "--print-retval --import-dir ${JANCY_DLL_BASE_DIR}/$<CONFIGURATION> ${JANCY_TEST_OPT_LEVEL}")
[-] 	if (UNIX)
[+] 	if(UNIX)
[-] 		set (_FLAGS "${_FLAGS} --debug-info")
[+] 		set(_FLAGS "${_FLAGS} --debug-info")
[-] 	endif ()
[+] 	endif()
[-] 	string (REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[+] 	string(REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[-] 	set (_ARG_LIST ${ARGN})
[+] 	set(_ARG_LIST ${ARGN})
[-] 	set (_DIR)
[+] 	set(_DIR)
[-] 	set (_PREFIX)
[+] 	set(_PREFIX)
[-] 	set (_FILE_LIST)
[+] 	set(_FILE_LIST)
[-] 	set (_FIRST_FILE)
[+] 	set(_FIRST_FILE)
[-] 	set (_IS_DIR FALSE)
[+] 	set(_IS_DIR FALSE)
[-] 	set (_IS_PREFIX FALSE)
[+] 	set(_IS_PREFIX FALSE)
[-] 	set (_IS_FLAGS FALSE)
[+] 	set(_IS_FLAGS FALSE)
[-] 	set (_IS_FILE_LIST FALSE)
[+] 	set(_IS_FILE_LIST FALSE)
[-] 	foreach (_ARG ${_ARG_LIST})
[+] 	foreach(_ARG ${_ARG_LIST})
[-] 		if (_IS_DIR)
[+] 		if(_IS_DIR)
[-] 			set (_DIR ${_ARG})
[+] 			set(_DIR ${_ARG})
[-] 			set (_IS_DIR FALSE)
[+] 			set(_IS_DIR FALSE)
[-] 		elseif (_IS_PREFIX)
[+] 		elseif(_IS_PREFIX)
[-] 			set (_PREFIX ${_ARG})
[+] 			set(_PREFIX ${_ARG})
[-] 			set (_IS_PREFIX FALSE)
[+] 			set(_IS_PREFIX FALSE)
[-] 		elseif (_IS_FLAGS)
[+] 		elseif(_IS_FLAGS)
[-] 			set (_FLAGS "${_FLAGS} ${_ARG}")
[+] 			set(_FLAGS "${_FLAGS} ${_ARG}")
[-] 			set (_IS_FLAGS FALSE)
[+] 			set(_IS_FLAGS FALSE)
[-] 			string (REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[+] 			string(REPLACE " " ";" _FLAG_LIST "${_FLAGS}")
[-] 		elseif ("${_ARG}" STREQUAL "WORKING_DIRECTORY")
[+] 		elseif("${_ARG}" STREQUAL "WORKING_DIRECTORY")
[-] 			set (_IS_DIR TRUE)
[+] 			set(_IS_DIR TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "NAME_PREFIX")
[+] 		elseif("${_ARG}" STREQUAL "NAME_PREFIX")
[-] 			set (_IS_PREFIX TRUE)
[+] 			set(_IS_PREFIX TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "FLAGS")
[+] 		elseif("${_ARG}" STREQUAL "FLAGS")
[-] 			set (_IS_FLAGS TRUE)
[+] 			set(_IS_FLAGS TRUE)
[-] 		elseif ("${_ARG}" STREQUAL "BEGIN_FILE_LIST")
[+] 		elseif("${_ARG}" STREQUAL "BEGIN_FILE_LIST")
[-] 			set (_IS_FILE_LIST TRUE)
[+] 			set(_IS_FILE_LIST TRUE)
[-] 			set (_FILE_LIST)
[+] 			set(_FILE_LIST)
[-] 		elseif (_IS_FILE_LIST AND NOT "${_ARG}" STREQUAL "END_FILE_LIST")
[+] 		elseif(_IS_FILE_LIST AND NOT "${_ARG}" STREQUAL "END_FILE_LIST")
[-] 			if ("${_FILE_LIST}" STREQUAL "")
[+] 			if("${_FILE_LIST}" STREQUAL "")
[-] 				set (_FIRST_FILE ${_ARG})
[+] 				set(_FIRST_FILE ${_ARG})
[-] 			endif ()
[+] 			endif()
[-] 			list (APPEND _FILE_LIST ${_ARG})
[+] 			list(APPEND _FILE_LIST ${_ARG})
[-] 		else ()
[+] 		else()
[-] 			if (_IS_FILE_LIST)
[+] 			if(_IS_FILE_LIST)
[-] 				set (_IS_FILE_LIST FALSE)
[+] 				set(_IS_FILE_LIST FALSE)
[-] 			else ()
[+] 			else()
[-] 				set (_FIRST_FILE ${_ARG})
[+] 				set(_FIRST_FILE ${_ARG})
[-] 				set (_FILE_LIST ${_ARG})
[+] 				set(_FILE_LIST ${_ARG})
[-] 			endif ()
[+] 			endif()
[-] 			if ("${_DIR}" STREQUAL "")
[+] 			if("${_DIR}" STREQUAL "")
[-] 				add_test (
[+] 				add_test(
[-] 			else ()
[+] 			else()
[-] 				add_test (
[+] 				add_test(
[-] 			endif ()
[+] 			endif()
[-] 		endif ()
[+] 		endif()
[-] 	endforeach ()
[+] 	endforeach()
[-] endmacro ()
[+] endmacro()
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ct\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] file (
[+] file(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (JNC_DIR ${JANCY_SRC_DIR}/jnc_ext/jnc_rtl/jnc)
[+] set(JNC_DIR ${JANCY_SRC_DIR}/jnc_ext/jnc_rtl/jnc)
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_graco_double_step (
[+] add_graco_double_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST}) # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST}) # include "*.jnc.cpp" manually
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] axl_exclude_from_build (${GEN_LLK_CPP_LIST}) # include "*.llk.cpp" manually
[+] axl_exclude_from_build(${GEN_LLK_CPP_LIST}) # include "*.llk.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_dll\CMakeLists.txt
----------------------
[-] set (CMAKE_INSTALL_RPATH)
[+] set(CMAKE_INSTALL_RPATH)
[-] set (CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[+] set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[-] link_directories (
[+] link_directories(
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] endif ()
[+] endif()
[-] if (WIN32)
[+] if(WIN32)
[-] 	configure_file (jnc_dll.def.in jnc_dll.def)
[+] 	configure_file(jnc_dll.def.in jnc_dll.def)
[-] 	set (
[+] 	set(
[-] else ()
[+] else()
[-] 	set (
[+] 	set(
[-] 	if (CMAKE_GENERATOR MATCHES "Xcode")
[+] 	if(CMAKE_GENERATOR MATCHES "Xcode")
[-] 		set (
[+] 		set(
[-] 	endif ()
[+] 	endif()
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		set (
[+] 		set(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] add_library (
[+] add_library(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		set_property (
[+] 		set_property(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] target_link_llvm_jit_libraries (jnc_dll)
[+] target_link_llvm_jit_libraries(jnc_dll)
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (LINUX)
[+] 	if(LINUX)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\CMakeLists.txt
----------------------
[-] set (CMAKE_INSTALL_RPATH)
[+] set(CMAKE_INSTALL_RPATH)
[-] set (CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[+] set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
[-] add_subdirectory (jnc_rtl)
[+] add_subdirectory(jnc_rtl)
[-] add_subdirectory (jnc_std)
[+] add_subdirectory(jnc_std)
[-] add_subdirectory (jnc_sys)
[+] add_subdirectory(jnc_sys)
[-] add_subdirectory (jnc_io_cmn)
[+] add_subdirectory(jnc_io_cmn)
[-] option (
[+] option(
[-] 	"Build jancy base IO (sockets, serial ports, files) extension library "
[+] 	"Build jancy base IO(sockets, serial ports, files) extension library "
[-] if (BUILD_JNC_IO_BASE)
[+] if(BUILD_JNC_IO_BASE)
[-] 	add_subdirectory (jnc_io_base)
[+] 	add_subdirectory(jnc_io_base)
[-] endif ()
[+] endif()
[-] if (LIBSSH2_FOUND)
[+] if(LIBSSH2_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_SSH)
[+] 	if(BUILD_JNC_IO_SSH)
[-] 		add_subdirectory (jnc_io_ssh)
[+] 		add_subdirectory(jnc_io_ssh)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (PCAP_FOUND)
[+] if(PCAP_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_PCAP)
[+] 	if(BUILD_JNC_IO_PCAP)
[-] 		add_subdirectory (jnc_io_pcap)
[+] 		add_subdirectory(jnc_io_pcap)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (LIBUSB_FOUND)
[+] if(LIBUSB_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_IO_USB)
[+] 	if(BUILD_JNC_IO_USB)
[-] 		add_subdirectory (jnc_io_usb)
[+] 		add_subdirectory(jnc_io_usb)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] if (BUILD_JNC_IO_DEVMON)
[+] if(BUILD_JNC_IO_DEVMON)
[-] 	add_subdirectory (jnc_io_devmon)
[+] 	add_subdirectory(jnc_io_devmon)
[-] endif ()
[+] endif()
[-] option (
[+] option(
[-] 	"Build jancy base IO (sockets, serial ports, files) extension library "
[+] 	"Build jancy base IO(sockets, serial ports, files) extension library "
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_io_base\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (
[+] 	set(
[-] 	set (
[+] 	set(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (
[+] 	set(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] 	if (LINUX AND LIBUDEV_FOUND)
[+] 	if(LINUX AND LIBUDEV_FOUND)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_io_cmn\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_io_devmon\CMakeLists.txt
----------------------
[-] if (NOT DEVMON_FOUND)
[+] if(NOT DEVMON_FOUND)
[-] 	set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] 	set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] 	configure_file (
[+] 	configure_file(
[-] 	add_custom_target (
[+] 	add_custom_target(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] 	install (
[+] 	install(
[-] 	return ()
[+] 	return()
[-] endif ()
[+] endif()
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (NOT WIN32 AND NOT LINUX)
[+] if(NOT WIN32 AND NOT LINUX)
[-] 	message (FATAL "jnc_io_devmon is currently Windows/Linux only")
[+] 	message(FATAL "jnc_io_devmon is currently Windows/Linux only")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (LINUX)
[+] elseif(LINUX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] configure_file (
[+] configure_file(
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_io_pcap\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_io_ssh\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] if (WIN32)
[+] if(WIN32)
[-] 	set (_DLL_LIST)
[+] 	set(_DLL_LIST)
[-] 	if (LIBSSH2_DLL_DIR)
[+] 	if(LIBSSH2_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${LIBSSH2_DLL_DIR}/libssh2.dll)
[+] 		list(APPEND _DLL_LIST ${LIBSSH2_DLL_DIR}/libssh2.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (OPENSSL_DLL_DIR)
[+] 	if(OPENSSL_DLL_DIR)
[-] 		list (APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[+] 		list(APPEND _DLL_LIST ${OPENSSL_DLL_DIR}/${OPENSSL_CRYPTO_DLL_NAME}.dll)
[-] 	endif ()
[+] 	endif()
[-] 	if (_DLL_LIST)
[+] 	if(_DLL_LIST)
[-] 		add_custom_command (
[+] 		add_custom_command(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_io_usb\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (
[+] link_directories(
[-] add_library (
[+] add_library(
[-] target_compile_definitions (
[+] target_compile_definitions(
[-] if (GCC AND NOT APPLE)
[+] if(GCC AND NOT APPLE)
[-] 	axl_set_export_version_script_gcc (
[+] 	axl_set_export_version_script_gcc(
[-] endif ()
[+] endif()
[-] axl_set_pch (
[+] axl_set_pch(
[-] set (CMAKE_SHARED_LIBRARY_PREFIX)
[+] set(CMAKE_SHARED_LIBRARY_PREFIX)
[-] set_target_properties (
[+] set_target_properties(
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (UNIX)
[+] if(UNIX)
[-] 	if (APPLE)
[+] 	if(APPLE)
[-] 		find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 		find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 		find_library (IOKIT_FRAMEWORK IOKit)
[+] 		find_library(IOKIT_FRAMEWORK IOKit)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (LINUX)
[+] if(LINUX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] endif ()
[+] endif()
[-] set_target_properties (
[+] set_target_properties(
[-] if (WIN32 AND LIBUSB_DLL_DIR)
[+] if(WIN32 AND LIBUSB_DLL_DIR)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_rtl\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_std\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_ext\jnc_sys\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] add_perl_step (
[+] add_perl_step(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] set (
[+] set(
[-] axl_exclude_from_build (${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[+] axl_exclude_from_build(${GEN_JNC_CPP_LIST})  # include "*.jnc.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] set (PCH_O_CPP pch_o.cpp)
[+] set(PCH_O_CPP pch_o.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (UNIX)
[+] if(UNIX)
[-] 	add_library (
[+] 	add_library(
[-] 	target_compile_definitions (
[+] 	target_compile_definitions(
[-] 	axl_set_pch (
[+] 	axl_set_pch(
[-] 	set_target_properties (
[+] 	set_target_properties(
[-] endif ()
[+] endif()
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_rt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H     pch.h)
[+] set(PCH_H     pch.h)
[-] set (PCH_CPP   pch.cpp)
[+] set(PCH_CPP   pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] add_library (
[+] add_library(
[-] axl_set_pch (
[+] axl_set_pch(
[-] install (
[+] install(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\src\jnc_stdlib\CMakeLists.txt
----------------------
[-] set (DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[+] set(DLL_DIR ${JANCY_DLL_BASE_DIR}/${CONFIGURATION})
[-] add_custom_target (
[+] add_custom_target(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\test\CMakeLists.txt
----------------------
[-] add_subdirectory (jnc_test_abi)
[+] add_subdirectory(jnc_test_abi)
[-] add_subdirectory (jnc)
[+] add_subdirectory(jnc)
[-] add_subdirectory (ioninja)
[+] add_subdirectory(ioninja)
[-] if (WIN32)
[+] if(WIN32)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_TEST_MFC)
[+] 	if(BUILD_JNC_TEST_MFC)
[-] 		add_subdirectory (jnc_test_mfc)
[+] 		add_subdirectory(jnc_test_mfc)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (QT_FOUND)
[+] if(QT_FOUND)
[-] 	option (
[+] 	option(
[-] 	if (BUILD_JNC_TEST_QT)
[+] 	if(BUILD_JNC_TEST_QT)
[-] 		add_subdirectory (jnc_test_qt)
[+] 		add_subdirectory(jnc_test_qt)
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\test\ioninja\CMakeLists.txt
----------------------
[-] if (NOT ${BUILD_JNC_APP})
[+] if(NOT ${BUILD_JNC_APP})
[-] 	return ()
[+] 	return()
[-] endif ()
[+] endif()
[-] add_jancy_tests (
[+] add_jancy_tests(
[-] if (BUILD_JNC_IO_SSH)
[+] if(BUILD_JNC_IO_SSH)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_PCAP)
[+] if(BUILD_JNC_IO_PCAP)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_DEVMON AND DEVMON_FOUND)
[+] if(BUILD_JNC_IO_DEVMON AND DEVMON_FOUND)
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
[-] add_jancy_tests (
[+] add_jancy_tests(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\test\jnc\CMakeLists.txt
----------------------
[-] file (
[+] file(
[-] if (NOT BUILD_JNC_IO_USB)
[+] if(NOT BUILD_JNC_IO_USB)
[-] 	list (
[+] 	list(
[-] endif ()
[+] endif()
[-] if (WIN32 AND ${LLVM_VERSION} VERSION_LESS 3.5)
[+] if(WIN32 AND ${LLVM_VERSION} VERSION_LESS 3.5)
[-] 	list (
[+] 	list(
[-] endif ()
[+] endif()
[-] source_group (
[+] source_group(
[-] if (${BUILD_JNC_APP})
[+] if(${BUILD_JNC_APP})
[-] 	add_jancy_tests (
[+] 	add_jancy_tests(
[-] endif ()
[+] endif()
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\test\jnc_test_abi\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] add_executable (
[+] add_executable(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_test_abi)
[+] 	target_link_llvm_jit_libraries(jnc_test_abi)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] add_test (
[+] add_test(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\test\jnc_test_mfc\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] include_directories (${PATH_LLVM_INC_DIR})
[+] include_directories(${PATH_LLVM_INC_DIR})
[-] link_directories (${PATH_LLVM_LIB_DIR}/$(Configuation))
[+] link_directories(${PATH_LLVM_LIB_DIR}/$(Configuation))
[-] set (CMAKE_MFC_FLAG 1)
[+] set(CMAKE_MFC_FLAG 1)
[-] add_executable (
[+] add_executable(
[-] llvm_map_components_to_libraries (
[+] llvm_map_components_to_libraries(
[-] target_link_libraries (
[+] target_link_libraries(
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
----------------------
02/04/2019 15:44:01 - C:\Projects\repos\ioninja\jancy\test\jnc_test_qt\CMakeLists.txt
----------------------
[-] set (
[+] set(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (
[+] set(
[-] set (
[+] set(
[-] source_group (
[+] source_group(
[-] set (GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[+] set(GEN_DIR ${CMAKE_CURRENT_BINARY_DIR}/gen)
[-] file (MAKE_DIRECTORY ${GEN_DIR})
[+] file(MAKE_DIRECTORY ${GEN_DIR})
[-] set (
[+] set(
[-] axl_push_and_set (CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[+] axl_push_and_set(CMAKE_CURRENT_BINARY_DIR ${GEN_DIR})
[-] qt5_wrap_cpp (
[+] qt5_wrap_cpp(
[-] qt5_add_resources (
[+] qt5_add_resources(
[-] add_ragel_step (
[+] add_ragel_step(
[-] add_ragel_step (
[+] add_ragel_step(
[-] set (
[+] set(
[-] axl_pop (CMAKE_CURRENT_BINARY_DIR)
[+] axl_pop(CMAKE_CURRENT_BINARY_DIR)
[-] axl_exclude_from_build (${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_MOC_CPP_LIST}) # include "moc_*.cpp" manually
[-] axl_exclude_from_build (${GEN_QRC_CPP_LIST}) # include "qrc_*.cpp" manually
[+] axl_exclude_from_build(${GEN_QRC_CPP_LIST}) # include "qrc_*.cpp" manually
[-] axl_exclude_from_build (${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[+] axl_exclude_from_build(${GEN_RL_CPP_LIST})  # include "*.rl.cpp" manually
[-] source_group (
[+] source_group(
[-] set (PCH_H   pch.h)
[+] set(PCH_H   pch.h)
[-] set (PCH_CPP pch.cpp)
[+] set(PCH_CPP pch.cpp)
[-] source_group (
[+] source_group(
[-] if (MSVC)
[+] if(MSVC)
[-] 	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[+] 	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /Zm200")
[-] endif ()
[+] endif()
[-] include_directories (
[+] include_directories(
[-] link_directories (${AXL_LIB_DIR})
[+] link_directories(${AXL_LIB_DIR})
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	link_directories (
[+] 	link_directories(
[-] else ()
[+] else()
[-] 	link_directories (${LLVM_LIB_DIR})
[+] 	link_directories(${LLVM_LIB_DIR})
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	include_directories (${LIBUSB_INC_DIR})
[+] 	include_directories(${LIBUSB_INC_DIR})
[-] 	link_directories (${LIBUSB_LIB_DIR})
[+] 	link_directories(${LIBUSB_LIB_DIR})
[-] 	add_definitions (-D_JNC_IO_USB=1)
[+] 	add_definitions(-D_JNC_IO_USB=1)
[-] endif ()
[+] endif()
[-] add_definitions (
[+] add_definitions(
[-] add_executable (
[+] add_executable(
[-] qt5_use_modules (jnc_test_qt Widgets)
[+] qt5_use_modules(jnc_test_qt Widgets)
[-] axl_set_pch (
[+] axl_set_pch(
[-] set_target_properties (
[+] set_target_properties(
[-] if (BUILD_JNC_DLL)
[+] if(BUILD_JNC_DLL)
[-] 	add_dependencies (
[+] 	add_dependencies(
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] else ()
[+] else()
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	target_link_llvm_jit_libraries (jnc_test_qt)
[+] 	target_link_llvm_jit_libraries(jnc_test_qt)
[-] endif ()
[+] endif()
[-] target_link_libraries (
[+] target_link_libraries(
[-] if (WIN32)
[+] if(WIN32)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] elseif (UNIX)
[+] elseif(UNIX)
[-] 	target_link_libraries (
[+] 	target_link_libraries(
[-] 	if (NOT APPLE)
[+] 	if(NOT APPLE)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		add_qt_rpath_link ()
[+] 		add_qt_rpath_link()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (BUILD_JNC_IO_USB)
[+] if(BUILD_JNC_IO_USB)
[-] 	if (WIN32)
[+] 	if(WIN32)
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 	else ()
[+] 	else()
[-] 		target_link_libraries (
[+] 		target_link_libraries(
[-] 		if (APPLE)
[+] 		if(APPLE)
[-] 			find_library (CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[+] 			find_library(CORE_FOUNDATION_FRAMEWORK CoreFoundation)
[-] 			find_library (IOKIT_FRAMEWORK IOKit)
[+] 			find_library(IOKIT_FRAMEWORK IOKit)
[-] 			target_link_libraries (
[+] 			target_link_libraries(
[-] 		endif ()
[+] 		endif()
[-] 		if (LINUX)
[+] 		if(LINUX)
[-] 			target_link_libraries (
[+] 			target_link_libraries(
[-] 		endif ()
[+] 		endif()
[-] 	endif ()
[+] 	endif()
[-] endif ()
[+] endif()
[-] if (WIN32 AND QT_DLL_DIR)
[+] if(WIN32 AND QT_DLL_DIR)
[-] 	set (_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[+] 	set(_DEBUG_SUFFIX $<$<CONFIG:Debug>:d>)
[-] 	add_custom_command (
[+] 	add_custom_command(
[-] endif ()
[+] endif()
